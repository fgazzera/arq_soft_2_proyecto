{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/tomig/OneDrive/Escritorio/Visual_Studio_Code/Arquitectura_De_Software_I/arqsoft/Proyecto/frontend/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/tomig/OneDrive/Escritorio/Visual_Studio_Code/Arquitectura_De_Software_I/arqsoft/Proyecto/frontend/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/tomig/OneDrive/Escritorio/Visual_Studio_Code/Arquitectura_De_Software_I/arqsoft/Proyecto/frontend/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useContext,useEffect,useState,useCallback}from'react';import{AuthContext}from'./login/auth';import'./estilo/reservas_cliente.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var HomePage=function HomePage(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),reservations=_useState2[0],setReservations=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),reservasFiltradas=_useState4[0],setReservasFiltradas=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),hoteles=_useState6[0],setHoteles=_useState6[1];var _useContext=useContext(AuthContext),isLoggedCliente=_useContext.isLoggedCliente;var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),hotelFiltrado=_useState8[0],setHotelFiltrado=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),startDateFilter=_useState10[0],setStartDateFilter=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),endDateFilter=_useState12[0],setEndDateFilter=_useState12[1];var getHoteles=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var hotelesArray,i,reserva,request,response,uniqueHotels;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;hotelesArray=[];i=0;case 3:if(!(i<reservations.length)){_context.next=15;break;}reserva=reservations[i];_context.next=7;return fetch(\"http://localhost:8090/cliente/hotel/\".concat(reserva.hotel_id));case 7:request=_context.sent;_context.next=10;return request.json();case 10:response=_context.sent;hotelesArray.push({id:response.id,nombre:response.nombre});case 12:i++;_context.next=3;break;case 15:uniqueHotels=Array.from(new Set(hotelesArray.map(function(hotel){return hotel.id;}))).map(function(id){return hotelesArray.find(function(hotel){return hotel.id===id;});});setHoteles(uniqueHotels);_context.next=22;break;case 19:_context.prev=19;_context.t0=_context[\"catch\"](0);console.log(\"No se pudieron obtener los hoteles:\",_context.t0);case 22:case\"end\":return _context.stop();}},_callee,null,[[0,19]]);})),[reservations]);var getReservations=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var accountId,request,response;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:if(!isLoggedCliente){_context2.next=18;break;}accountId=localStorage.getItem(\"id_cliente\");_context2.prev=2;_context2.next=5;return fetch(\"http://localhost:8090/cliente/reservas/\".concat(accountId));case 5:request=_context2.sent;_context2.next=8;return request.json();case 8:response=_context2.sent;setReservations(response);setReservasFiltradas(response);_context2.next=16;break;case 13:_context2.prev=13;_context2.t0=_context2[\"catch\"](2);console.log(\"No se pudieron obtener las reservas:\",_context2.t0);case 16:_context2.next=19;break;case 18:window.location.href='/';case 19:case\"end\":return _context2.stop();}},_callee2,null,[[2,13]]);})),[isLoggedCliente]);var getReservasFiltradas=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){var startDateObj,endDateObj,reservasArray,request,response;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.prev=0;startDateObj=new Date(startDateFilter);endDateObj=new Date(endDateFilter);reservasArray=[];if(!(startDateFilter&&endDateFilter)){_context3.next=15;break;}_context3.next=7;return fetch(\"http://localhost:8090/cliente/reservas-por-fecha/\".concat(startDateObj.getFullYear(),\"/\").concat(startDateObj.getMonth()+1,\"/\").concat(startDateObj.getDate()+1,\"/\").concat(endDateObj.getFullYear(),\"/\").concat(endDateObj.getMonth()+1,\"/\").concat(endDateObj.getDate()+1));case 7:request=_context3.sent;_context3.next=10;return request.json();case 10:response=_context3.sent;reservasArray=response;reservasArray=reservasArray.filter(function(reserva){return hotelFiltrado===''||hotelFiltrado===0||hotelFiltrado===reserva.hotel_id;});_context3.next=16;break;case 15:reservasArray=reservations.filter(function(reserva){return hotelFiltrado===''||hotelFiltrado===0||hotelFiltrado===reserva.hotel_id;});case 16:setReservasFiltradas(reservasArray);_context3.next=22;break;case 19:_context3.prev=19;_context3.t0=_context3[\"catch\"](0);console.log(\"No se pudieron obtener las reservas:\",_context3.t0);case 22:case\"end\":return _context3.stop();}},_callee3,null,[[0,19]]);})),[reservations,hotelFiltrado,startDateFilter,endDateFilter]);useEffect(function(){getReservations();},[getReservations]);useEffect(function(){getReservasFiltradas();},[getReservasFiltradas]);useEffect(function(){getHoteles();},[getHoteles]);var handleHotelFilterChange=function handleHotelFilterChange(event){setHotelFiltrado(event.target.value);};var handleStartDateFilterChange=function handleStartDateFilterChange(event){setStartDateFilter(event.target.value);var selectedStartDateObj=new Date(event.target.value);var endDateObj=new Date(endDateFilter);if(selectedStartDateObj>endDateObj){setEndDateFilter('');alert(\"Fechas no validas\");}};var handleEndDateFilterChange=function handleEndDateFilterChange(event){setEndDateFilter(event.target.value);var startDateObj=new Date(startDateFilter);var selectedEndDateObj=new Date(event.target.value);if(startDateObj>selectedEndDateObj){setEndDateFilter('');alert(\"Fechas no validas\");}};return/*#__PURE__*/_jsx(\"div\",{className:\"reservations-container1\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"reservations-container2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"filters-container\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"hotelFilter\",children:\"Hotel:\"}),/*#__PURE__*/_jsxs(\"ul\",{id:\"hotelFilter\",children:[/*#__PURE__*/_jsx(\"li\",{value:\"0\",onClick:handleHotelFilterChange,children:\"Todos los hoteles\"}),hoteles.map(function(hotel){return/*#__PURE__*/_jsx(\"li\",{value:hotel.id,onClick:handleHotelFilterChange,children:hotel.nombre},hotel.id);})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"startDateFilter\",children:\"Fecha de inicio:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",id:\"startDateFilter\",value:startDateFilter,onChange:handleStartDateFilterChange})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"endDateFilter\",children:\"Fecha de fin:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",id:\"endDateFilter\",value:endDateFilter,onChange:handleEndDateFilterChange})]})]}),/*#__PURE__*/_jsx(\"h4\",{children:\"Datos de tus reservas:\"}),reservasFiltradas.length?reservasFiltradas.map(function(reservation){var hotel=hoteles.find(function(hotel){return hotel.id===reservation.hotel_id;});var fechaInicio=\"\".concat(reservation.dia_inicio,\"/\").concat(reservation.mes_inicio,\"/\").concat(reservation.anio_inicio);var fechaFin=\"\".concat(reservation.dia_final,\"/\").concat(reservation.mes_final,\"/\").concat(reservation.anio_final);return/*#__PURE__*/_jsxs(\"div\",{className:\"reservation-card\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Hotel: \",hotel?hotel.nombre:'Hotel desconocido']}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Fecha de llegada: \",fechaInicio]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Fecha de fin: \",fechaFin]}),/*#__PURE__*/_jsx(\"p\",{children:\"Gracias por elegirnos!\"})]},reservation.ID);}):/*#__PURE__*/_jsx(\"p\",{children:\"No tienes reservas\"})]})});};export default HomePage;/*import React, { useContext, useEffect, useState, useCallback } from 'react';\r\nimport { AuthContext } from './login/auth';\r\nimport './estilo/reservas_cliente.css';\r\n\r\nconst HomePage = () => {\r\n  const [reservations, setReservations] = useState([]);\r\n  const [hotelesFiltrados, setHotelesFiltrados] = useState([]);\r\n  const [hoteles, setHoteles] = useState([]);\r\n  const { isLoggedCliente } = useContext(AuthContext);\r\n  const [hotelFiltrado, setHotelFiltrado] = useState('');\r\n  const [startDateFilter, setStartDateFilter] = useState('');\r\n  const [endDateFilter, setEndDateFilter] = useState('');\r\n\r\n  const getHoteles = useCallback(async () => {\r\n    try {\r\n      const hotelesArray = [];\r\n      for (let i = 0; i < reservations.length; i++) {\r\n        const reserva = reservations[i];\r\n        const request = await fetch(`http://localhost:8090/cliente/hotel/${reserva.hotel_id}`);\r\n        const response = await request.json();\r\n        hotelesArray.push(response);\r\n      }\r\n      setHoteles(Array.from(new Set(hotelesArray.map((hotel) => hotel.nombre))));\r\n    } catch (error) {\r\n      console.log(\"No se pudieron obtener los hoteles:\", error);\r\n    }\r\n  }, [reservations]);\r\n\r\n  const getHotelesFiltrados = useCallback(async () => {\r\n    try {\r\n      const hotelesArray = [];\r\n      for (let i = 0; i < reservations.length; i++) {\r\n        const reserva = reservations[i];\r\n        if (reserva.hotel_id === hotelFiltrado) {\r\n          const request = await fetch(`http://localhost:8090/cliente/hotel/${reserva.hotel_id}`);\r\n          const response = await request.json();\r\n          hotelesArray.push(response);\r\n        }\r\n      }\r\n      setHotelesFiltrados(hotelesArray);\r\n    } catch (error) {\r\n      console.log(\"No se pudieron obtener los hoteles:\", error);\r\n    }\r\n  }, [reservations, hotelFiltrado]);\r\n\r\n  const getReservations = useCallback(async () => {\r\n    if (isLoggedCliente) {\r\n      const accountId = localStorage.getItem(\"id_cliente\");\r\n      try {\r\n        const request = await fetch(`http://localhost:8090/cliente/reservas/${accountId}`);\r\n        const response = await request.json();\r\n        setReservations(response);\r\n      } catch (error) {\r\n        console.log(\"No se pudieron obtener las reservas:\", error);\r\n      }\r\n    } else {\r\n      window.location.href = '/';\r\n    }\r\n  }, [isLoggedCliente]);\r\n\r\n  useEffect(() => {\r\n    getReservations();\r\n  }, [getReservations]);\r\n\r\n  useEffect(() => {\r\n    if (reservations.length > 0) {\r\n      getHoteles();\r\n    }\r\n  }, [reservations, getHoteles]);\r\n  \r\n  useEffect(() => {\r\n    if (reservations.length > 0) {\r\n      getHotelesFiltrados();\r\n    }\r\n  }, [reservations, getHotelesFiltrados]);\r\n\r\n  const handleHotelFiltradoChange = (event) => {\r\n    setHotelFiltrado(event.target.value);\r\n  };\r\n\r\n  const handleStartDateFilterChange = (event) => {\r\n    setStartDateFilter(event.target.value);\r\n  };\r\n\r\n  const handleEndDateFilterChange = (event) => {\r\n    setEndDateFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"reservations-container1\">\r\n      <div className=\"reservations-container2\">\r\n        <div className=\"filters-container\">\r\n          <div>\r\n            <label htmlFor=\"hotelFilter\">Hotel:</label>\r\n            <ul id=\"hotelFilter\">\r\n              <li value=\"\" onClick={handleHotelFiltradoChange}>Todos los hoteles</li>\r\n              {hoteles.map((hotel) => (\r\n                <li key={hotel.id} value={hotel.id} onClick={handleHotelFiltradoChange}>\r\n                  {hotel.nombre}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"startDateFilter\">Fecha de inicio:</label>\r\n            <input type=\"date\" id=\"startDateFilter\" value={startDateFilter} onChange={handleStartDateFilterChange} />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"endDateFilter\">Fecha de fin:</label>\r\n            <input type=\"date\" id=\"endDateFilter\" value={endDateFilter} onChange={handleEndDateFilterChange} />\r\n          </div>\r\n        </div>\r\n        <h4>Datos de tus reservas:</h4>\r\n        {reservations.length ? (\r\n          reservations.map((reservation) => {\r\n            const hotel = hotelesFiltrados.find((hotel) => hotel.id === reservation.hotel_id);\r\n            const fechaInicio = `${reservation.dia_inicio}/${reservation.mes_inicio}/${reservation.anio_inicio}`;\r\n            const fechaFin = `${reservation.dia_final}/${reservation.mes_final}/${reservation.anio_final}`;\r\n            return (\r\n              <div className=\"reservation-card\" key={reservation.ID}>\r\n                <p>Hotel: {hotel ? hotel.nombre : 'Hotel desconocido'}</p>\r\n                <p>Fecha de llegada: {fechaInicio}</p>\r\n                <p>Fecha de fin: {fechaFin}</p>\r\n                <p>Gracias por elegirnos!</p>\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <p>No tienes reservas</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;*/ /*import React, { useContext, useEffect, useState, useCallback } from 'react';\r\nimport { AuthContext } from './login/auth';\r\nimport './estilo/reservas_cliente.css';\r\n\r\nconst HomePage = () => {\r\n  const [reservations, setReservations] = useState([]);\r\n  const [hoteles, setHoteles] = useState([]);\r\n  const { isLoggedCliente } = useContext(AuthContext);\r\n\r\n  const getHoteles = useCallback(async () => {\r\n    try {\r\n      const hotelesArray = [];\r\n      for (let i = 0; i < reservations.length; i++) {\r\n        const reserva = reservations[i];\r\n        const request = await fetch(`http://localhost:8090/cliente/hotel/${reserva.hotel_id}`);\r\n        const response = await request.json();\r\n        hotelesArray.push(response);\r\n      }\r\n      setHoteles(hotelesArray);\r\n    } catch (error) {\r\n      console.log(\"No se pudieron obtener los hoteles:\", error);\r\n    }\r\n  }, [reservations]);\r\n\r\n  const getReservations = useCallback(async () => {\r\n    if (isLoggedCliente) {\r\n      const accountId = localStorage.getItem(\"id_cliente\");\r\n      try {\r\n        const request = await fetch(`http://localhost:8090/cliente/reservas/${accountId}`);\r\n        const response = await request.json();\r\n        setReservations(response);\r\n      } catch (error) {\r\n        console.log(\"No se pudieron obtener las reservas:\", error);\r\n      }\r\n    } else {\r\n      window.location.href = '/';\r\n    }\r\n  }, [isLoggedCliente]);\r\n\r\n  useEffect(() => {\r\n    getReservations();\r\n  }, [getReservations]);\r\n\r\n  useEffect(() => {\r\n    getHoteles();\r\n  }, [getHoteles]); // Se agrega getHoteles como dependencia separada\r\n\r\n  return (\r\n    <div className=\"reservations-container1\">\r\n      <div className=\"reservations-container2\">\r\n        <h4>Datos de tus reservas:</h4>\r\n        {reservations.length ? (\r\n          reservations.map((reservation) => {\r\n            const hotel = hoteles.find((hotel) => hotel.id === reservation.hotel_id);\r\n            const fechaInicio = `${reservation.dia_inicio}/${reservation.mes_inicio}/${reservation.anio_inicio}`;\r\n            const fechaFin = `${reservation.dia_final}/${reservation.mes_final}/${reservation.anio_final}`;\r\n            return (\r\n              <div className=\"reservation-card\" key={reservation.ID}>\r\n                <p>Hotel: {hotel ? hotel.nombre : 'Hotel desconocido'}</p>\r\n                <p>Fecha de llegada: {fechaInicio}</p>\r\n                <p>Fecha de fin: {fechaFin}</p>\r\n                <p>Gracias por elegirnos!</p>\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <p>No tienes reservas</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;*/","map":{"version":3,"names":["React","useContext","useEffect","useState","useCallback","AuthContext","jsx","_jsx","jsxs","_jsxs","HomePage","_useState","_useState2","_slicedToArray","reservations","setReservations","_useState3","_useState4","reservasFiltradas","setReservasFiltradas","_useState5","_useState6","hoteles","setHoteles","_useContext","isLoggedCliente","_useState7","_useState8","hotelFiltrado","setHotelFiltrado","_useState9","_useState10","startDateFilter","setStartDateFilter","_useState11","_useState12","endDateFilter","setEndDateFilter","getHoteles","_asyncToGenerator","_regeneratorRuntime","mark","_callee","hotelesArray","i","reserva","request","response","uniqueHotels","wrap","_callee$","_context","prev","next","length","fetch","concat","hotel_id","sent","json","push","id","nombre","Array","from","Set","map","hotel","find","t0","console","log","stop","getReservations","_callee2","accountId","_callee2$","_context2","localStorage","getItem","window","location","href","getReservasFiltradas","_callee3","startDateObj","endDateObj","reservasArray","_callee3$","_context3","Date","getFullYear","getMonth","getDate","filter","handleHotelFilterChange","event","target","value","handleStartDateFilterChange","selectedStartDateObj","alert","handleEndDateFilterChange","selectedEndDateObj","className","children","htmlFor","onClick","type","onChange","reservation","fechaInicio","dia_inicio","mes_inicio","anio_inicio","fechaFin","dia_final","mes_final","anio_final","ID"],"sources":["C:/Users/tomig/OneDrive/Escritorio/Visual_Studio_Code/Arquitectura_De_Software_I/arqsoft/Proyecto/frontend/client/src/pages/reservas_cliente.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState, useCallback } from 'react';\r\nimport { AuthContext } from './login/auth';\r\nimport './estilo/reservas_cliente.css';\r\n\r\nconst HomePage = () => {\r\n  const [reservations, setReservations] = useState([]);\r\n  const [reservasFiltradas, setReservasFiltradas] = useState([]);\r\n  const [hoteles, setHoteles] = useState([]);\r\n  const { isLoggedCliente } = useContext(AuthContext);\r\n  const [hotelFiltrado, setHotelFiltrado] = useState('');\r\n  const [startDateFilter, setStartDateFilter] = useState('');\r\n  const [endDateFilter, setEndDateFilter] = useState('');\r\n\r\n  const getHoteles = useCallback(async () => {\r\n    try {\r\n      const hotelesArray = [];\r\n      for (let i = 0; i < reservations.length; i++) {\r\n        const reserva = reservations[i];\r\n        const request = await fetch(`http://localhost:8090/cliente/hotel/${reserva.hotel_id}`);\r\n        const response = await request.json();\r\n        hotelesArray.push({ id: response.id, nombre: response.nombre });\r\n      }\r\n      const uniqueHotels = Array.from(new Set(hotelesArray.map((hotel) => hotel.id))).map((id) => {\r\n        return hotelesArray.find((hotel) => hotel.id === id);\r\n      });\r\n      setHoteles(uniqueHotels);\r\n    } catch (error) {\r\n      console.log(\"No se pudieron obtener los hoteles:\", error);\r\n    }\r\n  }, [reservations]);\r\n\r\n  const getReservations = useCallback(async () => {\r\n    if (isLoggedCliente) {\r\n      const accountId = localStorage.getItem(\"id_cliente\");\r\n      try {\r\n        const request = await fetch(`http://localhost:8090/cliente/reservas/${accountId}`);\r\n        const response = await request.json();\r\n        setReservations(response);\r\n        setReservasFiltradas(response);\r\n      } catch (error) {\r\n        console.log(\"No se pudieron obtener las reservas:\", error);\r\n      }\r\n    } else {\r\n      window.location.href = '/';\r\n    }\r\n  }, [isLoggedCliente]);\r\n\r\n  const getReservasFiltradas = useCallback(async () => {\r\n    try {\r\n      const startDateObj = new Date(startDateFilter);\r\n      const endDateObj = new Date(endDateFilter);\r\n      let reservasArray = [];\r\n  \r\n      if (startDateFilter && endDateFilter) {\r\n        const request = await fetch(`http://localhost:8090/cliente/reservas-por-fecha/${startDateObj.getFullYear()}/${startDateObj.getMonth() + 1}/${startDateObj.getDate() + 1}/${endDateObj.getFullYear()}/${endDateObj.getMonth() + 1}/${endDateObj.getDate() + 1}`);\r\n        const response = await request.json();\r\n        reservasArray = response;\r\n        reservasArray = reservasArray.filter((reserva) => hotelFiltrado === '' || hotelFiltrado === 0 || hotelFiltrado === reserva.hotel_id);\r\n      } else {\r\n        reservasArray = reservations.filter((reserva) => hotelFiltrado === '' || hotelFiltrado === 0 || hotelFiltrado === reserva.hotel_id);\r\n      }\r\n  \r\n      setReservasFiltradas(reservasArray);\r\n    } catch (error) {\r\n      console.log(\"No se pudieron obtener las reservas:\", error);\r\n    }\r\n  }, [reservations, hotelFiltrado, startDateFilter, endDateFilter]);\r\n\r\n  useEffect(() => {\r\n    getReservations();\r\n  }, [getReservations]);\r\n\r\n  useEffect(() => {\r\n    getReservasFiltradas();\r\n  }, [getReservasFiltradas]);\r\n\r\n  useEffect(() => {\r\n    getHoteles();\r\n  }, [getHoteles]);\r\n\r\n  const handleHotelFilterChange = (event) => {\r\n    setHotelFiltrado(event.target.value);\r\n  };\r\n\r\n  const handleStartDateFilterChange = (event) => {\r\n    setStartDateFilter(event.target.value);\r\n    const selectedStartDateObj = new Date(event.target.value);\r\n    const endDateObj = new Date(endDateFilter);\r\n    if (selectedStartDateObj > endDateObj) {\r\n      setEndDateFilter('');\r\n      alert(\"Fechas no validas\");\r\n    }\r\n  };\r\n\r\n  const handleEndDateFilterChange = (event) => {\r\n    setEndDateFilter(event.target.value);\r\n    const startDateObj = new Date(startDateFilter);\r\n    const selectedEndDateObj = new Date(event.target.value);\r\n    if (startDateObj > selectedEndDateObj) {\r\n      setEndDateFilter('');\r\n      alert(\"Fechas no validas\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"reservations-container1\">\r\n      <div className=\"reservations-container2\">\r\n        <div className=\"filters-container\">\r\n          <div>\r\n            <label htmlFor=\"hotelFilter\">Hotel:</label>\r\n            <ul id=\"hotelFilter\">\r\n              <li value=\"0\" onClick={handleHotelFilterChange}>Todos los hoteles</li>\r\n              {hoteles.map((hotel) => (\r\n                <li key={hotel.id} value={hotel.id} onClick={handleHotelFilterChange}>\r\n                  {hotel.nombre}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"startDateFilter\">Fecha de inicio:</label>\r\n            <input type=\"date\" id=\"startDateFilter\" value={startDateFilter} onChange={handleStartDateFilterChange} />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"endDateFilter\">Fecha de fin:</label>\r\n            <input type=\"date\" id=\"endDateFilter\" value={endDateFilter} onChange={handleEndDateFilterChange} />\r\n          </div>\r\n        </div>\r\n        <h4>Datos de tus reservas:</h4>\r\n        {reservasFiltradas.length ? (\r\n          reservasFiltradas.map((reservation) => {\r\n            const hotel = hoteles.find((hotel) => hotel.id === reservation.hotel_id);\r\n            const fechaInicio = `${reservation.dia_inicio}/${reservation.mes_inicio}/${reservation.anio_inicio}`;\r\n            const fechaFin = `${reservation.dia_final}/${reservation.mes_final}/${reservation.anio_final}`;\r\n            return (\r\n              <div className=\"reservation-card\" key={reservation.ID}>\r\n                <p>Hotel: {hotel ? hotel.nombre : 'Hotel desconocido'}</p>\r\n                <p>Fecha de llegada: {fechaInicio}</p>\r\n                <p>Fecha de fin: {fechaFin}</p>\r\n                <p>Gracias por elegirnos!</p>\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <p>No tienes reservas</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default HomePage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*import React, { useContext, useEffect, useState, useCallback } from 'react';\r\nimport { AuthContext } from './login/auth';\r\nimport './estilo/reservas_cliente.css';\r\n\r\nconst HomePage = () => {\r\n  const [reservations, setReservations] = useState([]);\r\n  const [hotelesFiltrados, setHotelesFiltrados] = useState([]);\r\n  const [hoteles, setHoteles] = useState([]);\r\n  const { isLoggedCliente } = useContext(AuthContext);\r\n  const [hotelFiltrado, setHotelFiltrado] = useState('');\r\n  const [startDateFilter, setStartDateFilter] = useState('');\r\n  const [endDateFilter, setEndDateFilter] = useState('');\r\n\r\n  const getHoteles = useCallback(async () => {\r\n    try {\r\n      const hotelesArray = [];\r\n      for (let i = 0; i < reservations.length; i++) {\r\n        const reserva = reservations[i];\r\n        const request = await fetch(`http://localhost:8090/cliente/hotel/${reserva.hotel_id}`);\r\n        const response = await request.json();\r\n        hotelesArray.push(response);\r\n      }\r\n      setHoteles(Array.from(new Set(hotelesArray.map((hotel) => hotel.nombre))));\r\n    } catch (error) {\r\n      console.log(\"No se pudieron obtener los hoteles:\", error);\r\n    }\r\n  }, [reservations]);\r\n\r\n  const getHotelesFiltrados = useCallback(async () => {\r\n    try {\r\n      const hotelesArray = [];\r\n      for (let i = 0; i < reservations.length; i++) {\r\n        const reserva = reservations[i];\r\n        if (reserva.hotel_id === hotelFiltrado) {\r\n          const request = await fetch(`http://localhost:8090/cliente/hotel/${reserva.hotel_id}`);\r\n          const response = await request.json();\r\n          hotelesArray.push(response);\r\n        }\r\n      }\r\n      setHotelesFiltrados(hotelesArray);\r\n    } catch (error) {\r\n      console.log(\"No se pudieron obtener los hoteles:\", error);\r\n    }\r\n  }, [reservations, hotelFiltrado]);\r\n\r\n  const getReservations = useCallback(async () => {\r\n    if (isLoggedCliente) {\r\n      const accountId = localStorage.getItem(\"id_cliente\");\r\n      try {\r\n        const request = await fetch(`http://localhost:8090/cliente/reservas/${accountId}`);\r\n        const response = await request.json();\r\n        setReservations(response);\r\n      } catch (error) {\r\n        console.log(\"No se pudieron obtener las reservas:\", error);\r\n      }\r\n    } else {\r\n      window.location.href = '/';\r\n    }\r\n  }, [isLoggedCliente]);\r\n\r\n  useEffect(() => {\r\n    getReservations();\r\n  }, [getReservations]);\r\n\r\n  useEffect(() => {\r\n    if (reservations.length > 0) {\r\n      getHoteles();\r\n    }\r\n  }, [reservations, getHoteles]);\r\n  \r\n  useEffect(() => {\r\n    if (reservations.length > 0) {\r\n      getHotelesFiltrados();\r\n    }\r\n  }, [reservations, getHotelesFiltrados]);\r\n\r\n  const handleHotelFiltradoChange = (event) => {\r\n    setHotelFiltrado(event.target.value);\r\n  };\r\n\r\n  const handleStartDateFilterChange = (event) => {\r\n    setStartDateFilter(event.target.value);\r\n  };\r\n\r\n  const handleEndDateFilterChange = (event) => {\r\n    setEndDateFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"reservations-container1\">\r\n      <div className=\"reservations-container2\">\r\n        <div className=\"filters-container\">\r\n          <div>\r\n            <label htmlFor=\"hotelFilter\">Hotel:</label>\r\n            <ul id=\"hotelFilter\">\r\n              <li value=\"\" onClick={handleHotelFiltradoChange}>Todos los hoteles</li>\r\n              {hoteles.map((hotel) => (\r\n                <li key={hotel.id} value={hotel.id} onClick={handleHotelFiltradoChange}>\r\n                  {hotel.nombre}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"startDateFilter\">Fecha de inicio:</label>\r\n            <input type=\"date\" id=\"startDateFilter\" value={startDateFilter} onChange={handleStartDateFilterChange} />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"endDateFilter\">Fecha de fin:</label>\r\n            <input type=\"date\" id=\"endDateFilter\" value={endDateFilter} onChange={handleEndDateFilterChange} />\r\n          </div>\r\n        </div>\r\n        <h4>Datos de tus reservas:</h4>\r\n        {reservations.length ? (\r\n          reservations.map((reservation) => {\r\n            const hotel = hotelesFiltrados.find((hotel) => hotel.id === reservation.hotel_id);\r\n            const fechaInicio = `${reservation.dia_inicio}/${reservation.mes_inicio}/${reservation.anio_inicio}`;\r\n            const fechaFin = `${reservation.dia_final}/${reservation.mes_final}/${reservation.anio_final}`;\r\n            return (\r\n              <div className=\"reservation-card\" key={reservation.ID}>\r\n                <p>Hotel: {hotel ? hotel.nombre : 'Hotel desconocido'}</p>\r\n                <p>Fecha de llegada: {fechaInicio}</p>\r\n                <p>Fecha de fin: {fechaFin}</p>\r\n                <p>Gracias por elegirnos!</p>\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <p>No tienes reservas</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;*/\r\n\r\n\r\n\r\n\r\n\r\n/*import React, { useContext, useEffect, useState, useCallback } from 'react';\r\nimport { AuthContext } from './login/auth';\r\nimport './estilo/reservas_cliente.css';\r\n\r\nconst HomePage = () => {\r\n  const [reservations, setReservations] = useState([]);\r\n  const [hoteles, setHoteles] = useState([]);\r\n  const { isLoggedCliente } = useContext(AuthContext);\r\n\r\n  const getHoteles = useCallback(async () => {\r\n    try {\r\n      const hotelesArray = [];\r\n      for (let i = 0; i < reservations.length; i++) {\r\n        const reserva = reservations[i];\r\n        const request = await fetch(`http://localhost:8090/cliente/hotel/${reserva.hotel_id}`);\r\n        const response = await request.json();\r\n        hotelesArray.push(response);\r\n      }\r\n      setHoteles(hotelesArray);\r\n    } catch (error) {\r\n      console.log(\"No se pudieron obtener los hoteles:\", error);\r\n    }\r\n  }, [reservations]);\r\n\r\n  const getReservations = useCallback(async () => {\r\n    if (isLoggedCliente) {\r\n      const accountId = localStorage.getItem(\"id_cliente\");\r\n      try {\r\n        const request = await fetch(`http://localhost:8090/cliente/reservas/${accountId}`);\r\n        const response = await request.json();\r\n        setReservations(response);\r\n      } catch (error) {\r\n        console.log(\"No se pudieron obtener las reservas:\", error);\r\n      }\r\n    } else {\r\n      window.location.href = '/';\r\n    }\r\n  }, [isLoggedCliente]);\r\n\r\n  useEffect(() => {\r\n    getReservations();\r\n  }, [getReservations]);\r\n\r\n  useEffect(() => {\r\n    getHoteles();\r\n  }, [getHoteles]); // Se agrega getHoteles como dependencia separada\r\n\r\n  return (\r\n    <div className=\"reservations-container1\">\r\n      <div className=\"reservations-container2\">\r\n        <h4>Datos de tus reservas:</h4>\r\n        {reservations.length ? (\r\n          reservations.map((reservation) => {\r\n            const hotel = hoteles.find((hotel) => hotel.id === reservation.hotel_id);\r\n            const fechaInicio = `${reservation.dia_inicio}/${reservation.mes_inicio}/${reservation.anio_inicio}`;\r\n            const fechaFin = `${reservation.dia_final}/${reservation.mes_final}/${reservation.anio_final}`;\r\n            return (\r\n              <div className=\"reservation-card\" key={reservation.ID}>\r\n                <p>Hotel: {hotel ? hotel.nombre : 'Hotel desconocido'}</p>\r\n                <p>Fecha de llegada: {fechaInicio}</p>\r\n                <p>Fecha de fin: {fechaFin}</p>\r\n                <p>Gracias por elegirnos!</p>\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <p>No tienes reservas</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;*/"],"mappings":"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C,QAAQ,IAAA3D,MAAA,CAAMsD,WAAW,CAACM,SAAS,MAAA5D,MAAA,CAAIsD,WAAW,CAACO,SAAS,MAAA7D,MAAA,CAAIsD,WAAW,CAACQ,UAAU,CAAE,CAC9F,mBACE7G,KAAA,QAAK+F,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/BhG,KAAA,MAAAgG,QAAA,EAAG,SAAO,CAACtC,KAAK,CAAGA,KAAK,CAACL,MAAM,CAAG,mBAAmB,GAAK,cAC1DrD,KAAA,MAAAgG,QAAA,EAAG,oBAAkB,CAACM,WAAW,GAAK,cACtCtG,KAAA,MAAAgG,QAAA,EAAG,gBAAc,CAACU,QAAQ,GAAK,cAC/B5G,IAAA,MAAAkG,QAAA,CAAG,wBAAsB,EAAI,GAJQK,WAAW,CAACS,EAAE,CAK/C,CAEV,CAAC,CAAC,cAEFhH,IAAA,MAAAkG,QAAA,CAAG,oBAAkB,EACtB,GACG,EACF,CAEV,CAAC,CACD,cAAe,CAAA/F,QAAQ,CAWvvIA,CA6IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}