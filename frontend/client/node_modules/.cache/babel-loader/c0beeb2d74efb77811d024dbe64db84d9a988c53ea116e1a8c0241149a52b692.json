{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomig\\\\OneDrive\\\\Escritorio\\\\Visual_Studio_Code\\\\Arquitectura_De_Software_I\\\\arqsoft\\\\Proyecto\\\\frontend\\\\client\\\\src\\\\pages\\\\reservas_cliente.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState, useCallback } from 'react';\nimport { AuthContext } from './login/auth';\nimport './estilo/reservas_cliente.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [reservations, setReservations] = useState([]);\n  const [hoteles, setHoteles] = useState([]);\n  const {\n    isLoggedCliente\n  } = useContext(AuthContext);\n  const [hotelFiltrado, setHotelFiltrado] = useState('');\n  //const [startDateFilter, setStartDateFilter] = useState('');\n  //const [endDateFilter, setEndDateFilter] = useState('');\n\n  /*const getHoteles = useCallback(async () => {\r\n    try {\r\n      const hotelesArray = [];\r\n      for (let i = 0; i < reservations.length; i++) {\r\n        const reserva = reservations[i];\r\n        const request = await fetch(`http://localhost:8090/cliente/hotel/${reserva.hotel_id}`);\r\n        const response = await request.json();\r\n        hotelesArray.push(response);\r\n      }\r\n      setHoteles(hotelesArray);\r\n    } catch (error) {\r\n      console.log(\"No se pudieron obtener los hoteles:\", error);\r\n    }\r\n  }, [reservations]);*/\n\n  const getHoteles = useCallback(async () => {\n    try {\n      const hotelesArray = [];\n      for (let i = 0; i < reservations.length; i++) {\n        const reserva = reservations[i];\n        const request = await fetch(`http://localhost:8090/cliente/hotel/${reserva.hotel_id}`);\n        const response = await request.json();\n        hotelesArray.push({\n          id: response.id,\n          nombre: response.nombre\n        });\n      }\n      const uniqueHotels = Array.from(new Set(hotelesArray.map(hotel => hotel.id))).map(id => {\n        return hotelesArray.find(hotel => hotel.id === id);\n      });\n      setHoteles(uniqueHotels);\n    } catch (error) {\n      console.log(\"No se pudieron obtener los hoteles:\", error);\n    }\n  }, [reservations]);\n  const getReservations = useCallback(async () => {\n    if (isLoggedCliente) {\n      const accountId = localStorage.getItem(\"id_cliente\");\n      try {\n        const request = await fetch(`http://localhost:8090/cliente/reservas/${accountId}`);\n        const response = await request.json();\n        setReservations(response);\n      } catch (error) {\n        console.log(\"No se pudieron obtener las reservas:\", error);\n      }\n    } else {\n      window.location.href = '/';\n    }\n  }, [isLoggedCliente]);\n  const getReservasFiltradas = useCallback(async () => {\n    const hotelesArray = [];\n    for (let i = 0; i < reservations.length; i++) {\n      const reserva = reservations[i];\n      const request = await fetch(`http://localhost:8090/cliente/hotel/${reserva.hotel_id}`);\n      const response = await request.json();\n      if (response.hotel_id === hotelFiltrado) {\n        hotelesArray.push(response);\n      } else if (hotelFiltrado === \"\") {\n        hotelesArray.push(response);\n      }\n    }\n  }, []);\n  useEffect(() => {\n    getReservations();\n  }, [getReservations]);\n  useEffect(() => {\n    getReservasFiltradas();\n  }, [getReservasFiltradas]);\n  useEffect(() => {\n    getHoteles();\n  }, [getHoteles]);\n  const handleHotelFilterChange = event => {\n    alert(event.target.value);\n    setHotelFiltrado(event.target.value);\n  };\n\n  /*const handleStartDateFilterChange = (event) => {\r\n    setStartDateFilter(event.target.value);\r\n  };\r\n    const handleEndDateFilterChange = (event) => {\r\n    setEndDateFilter(event.target.value);\r\n  };*/\n\n  /*const filteredReservations = reservations.filter((reservation) => {\r\n    const hotel = hoteles.find((hotel) => hotel.id === reservation.hotel_id);\r\n    const hotelName = hotel ? hotel.nombre : 'Hotel desconocido';\r\n    //const startDate = new Date(reservation.anio_inicio, reservation.mes_inicio - 1, reservation.dia_inicio);\r\n    //const endDate = new Date(reservation.anio_final, reservation.mes_final - 1, reservation.dia_final);\r\n      // Aplicar filtros\r\n    const hotelFilterMatch = hotelName === hotelFiltrado.selectedHotel;\r\n    //const startDateFilterMatch = startDateFilter === '' || startDate >= new Date(startDateFilter);\r\n    //const endDateFilterMatch = endDateFilter === '' || endDate <= new Date(endDateFilter);\r\n      //return hotelFilterMatch && startDateFilterMatch && endDateFilterMatch;\r\n    return hotelFilterMatch;\r\n  });*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reservations-container1\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reservations-container2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"hotelFilter\",\n            children: \"Hotel:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            id: \"hotelFilter\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              value: \"\",\n              onClick: handleHotelFilterChange,\n              children: \"Todos los hoteles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), hoteles.map(hotel => /*#__PURE__*/_jsxDEV(\"li\", {\n              value: hotel.id,\n              onClick: handleHotelFilterChange,\n              children: hotel.nombre\n            }, hotel.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Datos de tus reservas:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), reservations.length ? reservations.map(reservation => {\n        const hotel = hoteles.find(hotel => hotel.id === reservation.hotel_id);\n        const fechaInicio = `${reservation.dia_inicio}/${reservation.mes_inicio}/${reservation.anio_inicio}`;\n        const fechaFin = `${reservation.dia_final}/${reservation.mes_final}/${reservation.anio_final}`;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reservation-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Hotel: \", hotel ? hotel.nombre : 'Hotel desconocido']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Fecha de llegada: \", fechaInicio]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Fecha de fin: \", fechaFin]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Gracias por elegirnos!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this)]\n        }, reservation.ID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No tienes reservas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n/*\r\n<div>\r\n            <label htmlFor=\"startDateFilter\">Fecha de inicio:</label>\r\n            <input type=\"date\" id=\"startDateFilter\" value={startDateFilter} onChange={handleStartDateFilterChange} />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"endDateFilter\">Fecha de fin:</label>\r\n            <input type=\"date\" id=\"endDateFilter\" value={endDateFilter} onChange={handleEndDateFilterChange} />\r\n          </div\r\n*/\n_s(HomePage, \"CWCNhjUCl3x/7ZHT7WW9wp0qeMA=\");\n_c = HomePage;\nexport default HomePage;\n\n/*import React, { useContext, useEffect, useState, useCallback } from 'react';\r\nimport { AuthContext } from './login/auth';\r\nimport './estilo/reservas_cliente.css';\r\n\r\nconst HomePage = () => {\r\n  const [reservations, setReservations] = useState([]);\r\n  const [hotelesFiltrados, setHotelesFiltrados] = useState([]);\r\n  const [hoteles, setHoteles] = useState([]);\r\n  const { isLoggedCliente } = useContext(AuthContext);\r\n  const [hotelFiltrado, setHotelFiltrado] = useState('');\r\n  const [startDateFilter, setStartDateFilter] = useState('');\r\n  const [endDateFilter, setEndDateFilter] = useState('');\r\n\r\n  const getHoteles = useCallback(async () => {\r\n    try {\r\n      const hotelesArray = [];\r\n      for (let i = 0; i < reservations.length; i++) {\r\n        const reserva = reservations[i];\r\n        const request = await fetch(`http://localhost:8090/cliente/hotel/${reserva.hotel_id}`);\r\n        const response = await request.json();\r\n        hotelesArray.push(response);\r\n      }\r\n      setHoteles(Array.from(new Set(hotelesArray.map((hotel) => hotel.nombre))));\r\n    } catch (error) {\r\n      console.log(\"No se pudieron obtener los hoteles:\", error);\r\n    }\r\n  }, [reservations]);\r\n\r\n  const getHotelesFiltrados = useCallback(async () => {\r\n    try {\r\n      const hotelesArray = [];\r\n      for (let i = 0; i < reservations.length; i++) {\r\n        const reserva = reservations[i];\r\n        if (reserva.hotel_id === hotelFiltrado) {\r\n          const request = await fetch(`http://localhost:8090/cliente/hotel/${reserva.hotel_id}`);\r\n          const response = await request.json();\r\n          hotelesArray.push(response);\r\n        }\r\n      }\r\n      setHotelesFiltrados(hotelesArray);\r\n    } catch (error) {\r\n      console.log(\"No se pudieron obtener los hoteles:\", error);\r\n    }\r\n  }, [reservations, hotelFiltrado]);\r\n\r\n  const getReservations = useCallback(async () => {\r\n    if (isLoggedCliente) {\r\n      const accountId = localStorage.getItem(\"id_cliente\");\r\n      try {\r\n        const request = await fetch(`http://localhost:8090/cliente/reservas/${accountId}`);\r\n        const response = await request.json();\r\n        setReservations(response);\r\n      } catch (error) {\r\n        console.log(\"No se pudieron obtener las reservas:\", error);\r\n      }\r\n    } else {\r\n      window.location.href = '/';\r\n    }\r\n  }, [isLoggedCliente]);\r\n\r\n  useEffect(() => {\r\n    getReservations();\r\n  }, [getReservations]);\r\n\r\n  useEffect(() => {\r\n    if (reservations.length > 0) {\r\n      getHoteles();\r\n    }\r\n  }, [reservations, getHoteles]);\r\n  \r\n  useEffect(() => {\r\n    if (reservations.length > 0) {\r\n      getHotelesFiltrados();\r\n    }\r\n  }, [reservations, getHotelesFiltrados]);\r\n\r\n  const handleHotelFiltradoChange = (event) => {\r\n    setHotelFiltrado(event.target.value);\r\n  };\r\n\r\n  const handleStartDateFilterChange = (event) => {\r\n    setStartDateFilter(event.target.value);\r\n  };\r\n\r\n  const handleEndDateFilterChange = (event) => {\r\n    setEndDateFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"reservations-container1\">\r\n      <div className=\"reservations-container2\">\r\n        <div className=\"filters-container\">\r\n          <div>\r\n            <label htmlFor=\"hotelFilter\">Hotel:</label>\r\n            <ul id=\"hotelFilter\">\r\n              <li value=\"\" onClick={handleHotelFiltradoChange}>Todos los hoteles</li>\r\n              {hoteles.map((hotel) => (\r\n                <li key={hotel.id} value={hotel.id} onClick={handleHotelFiltradoChange}>\r\n                  {hotel.nombre}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"startDateFilter\">Fecha de inicio:</label>\r\n            <input type=\"date\" id=\"startDateFilter\" value={startDateFilter} onChange={handleStartDateFilterChange} />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"endDateFilter\">Fecha de fin:</label>\r\n            <input type=\"date\" id=\"endDateFilter\" value={endDateFilter} onChange={handleEndDateFilterChange} />\r\n          </div>\r\n        </div>\r\n        <h4>Datos de tus reservas:</h4>\r\n        {reservations.length ? (\r\n          reservations.map((reservation) => {\r\n            const hotel = hotelesFiltrados.find((hotel) => hotel.id === reservation.hotel_id);\r\n            const fechaInicio = `${reservation.dia_inicio}/${reservation.mes_inicio}/${reservation.anio_inicio}`;\r\n            const fechaFin = `${reservation.dia_final}/${reservation.mes_final}/${reservation.anio_final}`;\r\n            return (\r\n              <div className=\"reservation-card\" key={reservation.ID}>\r\n                <p>Hotel: {hotel ? hotel.nombre : 'Hotel desconocido'}</p>\r\n                <p>Fecha de llegada: {fechaInicio}</p>\r\n                <p>Fecha de fin: {fechaFin}</p>\r\n                <p>Gracias por elegirnos!</p>\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <p>No tienes reservas</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;*/\n\n/*import React, { useContext, useEffect, useState, useCallback } from 'react';\r\nimport { AuthContext } from './login/auth';\r\nimport './estilo/reservas_cliente.css';\r\n\r\nconst HomePage = () => {\r\n  const [reservations, setReservations] = useState([]);\r\n  const [hoteles, setHoteles] = useState([]);\r\n  const { isLoggedCliente } = useContext(AuthContext);\r\n\r\n  const getHoteles = useCallback(async () => {\r\n    try {\r\n      const hotelesArray = [];\r\n      for (let i = 0; i < reservations.length; i++) {\r\n        const reserva = reservations[i];\r\n        const request = await fetch(`http://localhost:8090/cliente/hotel/${reserva.hotel_id}`);\r\n        const response = await request.json();\r\n        hotelesArray.push(response);\r\n      }\r\n      setHoteles(hotelesArray);\r\n    } catch (error) {\r\n      console.log(\"No se pudieron obtener los hoteles:\", error);\r\n    }\r\n  }, [reservations]);\r\n\r\n  const getReservations = useCallback(async () => {\r\n    if (isLoggedCliente) {\r\n      const accountId = localStorage.getItem(\"id_cliente\");\r\n      try {\r\n        const request = await fetch(`http://localhost:8090/cliente/reservas/${accountId}`);\r\n        const response = await request.json();\r\n        setReservations(response);\r\n      } catch (error) {\r\n        console.log(\"No se pudieron obtener las reservas:\", error);\r\n      }\r\n    } else {\r\n      window.location.href = '/';\r\n    }\r\n  }, [isLoggedCliente]);\r\n\r\n  useEffect(() => {\r\n    getReservations();\r\n  }, [getReservations]);\r\n\r\n  useEffect(() => {\r\n    getHoteles();\r\n  }, [getHoteles]); // Se agrega getHoteles como dependencia separada\r\n\r\n  return (\r\n    <div className=\"reservations-container1\">\r\n      <div className=\"reservations-container2\">\r\n        <h4>Datos de tus reservas:</h4>\r\n        {reservations.length ? (\r\n          reservations.map((reservation) => {\r\n            const hotel = hoteles.find((hotel) => hotel.id === reservation.hotel_id);\r\n            const fechaInicio = `${reservation.dia_inicio}/${reservation.mes_inicio}/${reservation.anio_inicio}`;\r\n            const fechaFin = `${reservation.dia_final}/${reservation.mes_final}/${reservation.anio_final}`;\r\n            return (\r\n              <div className=\"reservation-card\" key={reservation.ID}>\r\n                <p>Hotel: {hotel ? hotel.nombre : 'Hotel desconocido'}</p>\r\n                <p>Fecha de llegada: {fechaInicio}</p>\r\n                <p>Fecha de fin: {fechaFin}</p>\r\n                <p>Gracias por elegirnos!</p>\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <p>No tienes reservas</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;*/\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useCallback","AuthContext","jsxDEV","_jsxDEV","HomePage","_s","reservations","setReservations","hoteles","setHoteles","isLoggedCliente","hotelFiltrado","setHotelFiltrado","getHoteles","hotelesArray","i","length","reserva","request","fetch","hotel_id","response","json","push","id","nombre","uniqueHotels","Array","from","Set","map","hotel","find","error","console","log","getReservations","accountId","localStorage","getItem","window","location","href","getReservasFiltradas","handleHotelFilterChange","event","alert","target","value","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onClick","reservation","fechaInicio","dia_inicio","mes_inicio","anio_inicio","fechaFin","dia_final","mes_final","anio_final","ID","_c","$RefreshReg$"],"sources":["C:/Users/tomig/OneDrive/Escritorio/Visual_Studio_Code/Arquitectura_De_Software_I/arqsoft/Proyecto/frontend/client/src/pages/reservas_cliente.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState, useCallback } from 'react';\r\nimport { AuthContext } from './login/auth';\r\nimport './estilo/reservas_cliente.css';\r\n\r\nconst HomePage = () => {\r\n  const [reservations, setReservations] = useState([]);\r\n  const [hoteles, setHoteles] = useState([]);\r\n  const { isLoggedCliente } = useContext(AuthContext);\r\n  const [hotelFiltrado, setHotelFiltrado] = useState('');\r\n  //const [startDateFilter, setStartDateFilter] = useState('');\r\n  //const [endDateFilter, setEndDateFilter] = useState('');\r\n\r\n  /*const getHoteles = useCallback(async () => {\r\n    try {\r\n      const hotelesArray = [];\r\n      for (let i = 0; i < reservations.length; i++) {\r\n        const reserva = reservations[i];\r\n        const request = await fetch(`http://localhost:8090/cliente/hotel/${reserva.hotel_id}`);\r\n        const response = await request.json();\r\n        hotelesArray.push(response);\r\n      }\r\n      setHoteles(hotelesArray);\r\n    } catch (error) {\r\n      console.log(\"No se pudieron obtener los hoteles:\", error);\r\n    }\r\n  }, [reservations]);*/\r\n\r\n  const getHoteles = useCallback(async () => {\r\n    try {\r\n      const hotelesArray = [];\r\n      for (let i = 0; i < reservations.length; i++) {\r\n        const reserva = reservations[i];\r\n        const request = await fetch(`http://localhost:8090/cliente/hotel/${reserva.hotel_id}`);\r\n        const response = await request.json();\r\n        hotelesArray.push({ id: response.id, nombre: response.nombre });\r\n      }\r\n      const uniqueHotels = Array.from(new Set(hotelesArray.map((hotel) => hotel.id))).map((id) => {\r\n        return hotelesArray.find((hotel) => hotel.id === id);\r\n      });\r\n      setHoteles(uniqueHotels);\r\n    } catch (error) {\r\n      console.log(\"No se pudieron obtener los hoteles:\", error);\r\n    }\r\n  }, [reservations]);\r\n\r\n  const getReservations = useCallback(async () => {\r\n    if (isLoggedCliente) {\r\n      const accountId = localStorage.getItem(\"id_cliente\");\r\n      try {\r\n        const request = await fetch(`http://localhost:8090/cliente/reservas/${accountId}`);\r\n        const response = await request.json();\r\n        setReservations(response);\r\n      } catch (error) {\r\n        console.log(\"No se pudieron obtener las reservas:\", error);\r\n      }\r\n    } else {\r\n      window.location.href = '/';\r\n    }\r\n  }, [isLoggedCliente]);\r\n\r\n  const getReservasFiltradas = useCallback(async () => {\r\n    const hotelesArray = [];\r\n    for (let i = 0; i < reservations.length; i++) {\r\n      const reserva = reservations[i];\r\n      const request = await fetch(`http://localhost:8090/cliente/hotel/${reserva.hotel_id}`);\r\n      const response = await request.json();\r\n      if (response.hotel_id === hotelFiltrado) {\r\n        hotelesArray.push(response);\r\n      }\r\n      else if (hotelFiltrado === \"\") {\r\n        hotelesArray.push(response);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getReservations();\r\n  }, [getReservations]);\r\n\r\n  useEffect(() => {\r\n    getReservasFiltradas();\r\n  }, [getReservasFiltradas]);\r\n\r\n  useEffect(() => {\r\n    getHoteles();\r\n  }, [getHoteles]);\r\n\r\n  const handleHotelFilterChange = (event) => {\r\n    alert(event.target.value);\r\n    setHotelFiltrado(event.target.value);\r\n  };\r\n\r\n  /*const handleStartDateFilterChange = (event) => {\r\n    setStartDateFilter(event.target.value);\r\n  };\r\n\r\n  const handleEndDateFilterChange = (event) => {\r\n    setEndDateFilter(event.target.value);\r\n  };*/\r\n\r\n  /*const filteredReservations = reservations.filter((reservation) => {\r\n    const hotel = hoteles.find((hotel) => hotel.id === reservation.hotel_id);\r\n    const hotelName = hotel ? hotel.nombre : 'Hotel desconocido';\r\n    //const startDate = new Date(reservation.anio_inicio, reservation.mes_inicio - 1, reservation.dia_inicio);\r\n    //const endDate = new Date(reservation.anio_final, reservation.mes_final - 1, reservation.dia_final);\r\n\r\n    // Aplicar filtros\r\n    const hotelFilterMatch = hotelName === hotelFiltrado.selectedHotel;\r\n    //const startDateFilterMatch = startDateFilter === '' || startDate >= new Date(startDateFilter);\r\n    //const endDateFilterMatch = endDateFilter === '' || endDate <= new Date(endDateFilter);\r\n\r\n    //return hotelFilterMatch && startDateFilterMatch && endDateFilterMatch;\r\n    return hotelFilterMatch;\r\n  });*/\r\n\r\n  return (\r\n    <div className=\"reservations-container1\">\r\n      <div className=\"reservations-container2\">\r\n        <div className=\"filters-container\">\r\n          <div>\r\n            <label htmlFor=\"hotelFilter\">Hotel:</label>\r\n            <ul id=\"hotelFilter\">\r\n              <li value=\"\" onClick={handleHotelFilterChange}>Todos los hoteles</li>\r\n              {hoteles.map((hotel) => (\r\n                <li key={hotel.id} value={hotel.id} onClick={handleHotelFilterChange}>\r\n                  {hotel.nombre}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <h4>Datos de tus reservas:</h4>\r\n        {reservations.length ? (\r\n          reservations.map((reservation) => {\r\n            const hotel = hoteles.find((hotel) => hotel.id === reservation.hotel_id);\r\n            const fechaInicio = `${reservation.dia_inicio}/${reservation.mes_inicio}/${reservation.anio_inicio}`;\r\n            const fechaFin = `${reservation.dia_final}/${reservation.mes_final}/${reservation.anio_final}`;\r\n            return (\r\n              <div className=\"reservation-card\" key={reservation.ID}>\r\n                <p>Hotel: {hotel ? hotel.nombre : 'Hotel desconocido'}</p>\r\n                <p>Fecha de llegada: {fechaInicio}</p>\r\n                <p>Fecha de fin: {fechaFin}</p>\r\n                <p>Gracias por elegirnos!</p>\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <p>No tienes reservas</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n/*\r\n<div>\r\n            <label htmlFor=\"startDateFilter\">Fecha de inicio:</label>\r\n            <input type=\"date\" id=\"startDateFilter\" value={startDateFilter} onChange={handleStartDateFilterChange} />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"endDateFilter\">Fecha de fin:</label>\r\n            <input type=\"date\" id=\"endDateFilter\" value={endDateFilter} onChange={handleEndDateFilterChange} />\r\n          </div\r\n*/\r\nexport default HomePage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*import React, { useContext, useEffect, useState, useCallback } from 'react';\r\nimport { AuthContext } from './login/auth';\r\nimport './estilo/reservas_cliente.css';\r\n\r\nconst HomePage = () => {\r\n  const [reservations, setReservations] = useState([]);\r\n  const [hotelesFiltrados, setHotelesFiltrados] = useState([]);\r\n  const [hoteles, setHoteles] = useState([]);\r\n  const { isLoggedCliente } = useContext(AuthContext);\r\n  const [hotelFiltrado, setHotelFiltrado] = useState('');\r\n  const [startDateFilter, setStartDateFilter] = useState('');\r\n  const [endDateFilter, setEndDateFilter] = useState('');\r\n\r\n  const getHoteles = useCallback(async () => {\r\n    try {\r\n      const hotelesArray = [];\r\n      for (let i = 0; i < reservations.length; i++) {\r\n        const reserva = reservations[i];\r\n        const request = await fetch(`http://localhost:8090/cliente/hotel/${reserva.hotel_id}`);\r\n        const response = await request.json();\r\n        hotelesArray.push(response);\r\n      }\r\n      setHoteles(Array.from(new Set(hotelesArray.map((hotel) => hotel.nombre))));\r\n    } catch (error) {\r\n      console.log(\"No se pudieron obtener los hoteles:\", error);\r\n    }\r\n  }, [reservations]);\r\n\r\n  const getHotelesFiltrados = useCallback(async () => {\r\n    try {\r\n      const hotelesArray = [];\r\n      for (let i = 0; i < reservations.length; i++) {\r\n        const reserva = reservations[i];\r\n        if (reserva.hotel_id === hotelFiltrado) {\r\n          const request = await fetch(`http://localhost:8090/cliente/hotel/${reserva.hotel_id}`);\r\n          const response = await request.json();\r\n          hotelesArray.push(response);\r\n        }\r\n      }\r\n      setHotelesFiltrados(hotelesArray);\r\n    } catch (error) {\r\n      console.log(\"No se pudieron obtener los hoteles:\", error);\r\n    }\r\n  }, [reservations, hotelFiltrado]);\r\n\r\n  const getReservations = useCallback(async () => {\r\n    if (isLoggedCliente) {\r\n      const accountId = localStorage.getItem(\"id_cliente\");\r\n      try {\r\n        const request = await fetch(`http://localhost:8090/cliente/reservas/${accountId}`);\r\n        const response = await request.json();\r\n        setReservations(response);\r\n      } catch (error) {\r\n        console.log(\"No se pudieron obtener las reservas:\", error);\r\n      }\r\n    } else {\r\n      window.location.href = '/';\r\n    }\r\n  }, [isLoggedCliente]);\r\n\r\n  useEffect(() => {\r\n    getReservations();\r\n  }, [getReservations]);\r\n\r\n  useEffect(() => {\r\n    if (reservations.length > 0) {\r\n      getHoteles();\r\n    }\r\n  }, [reservations, getHoteles]);\r\n  \r\n  useEffect(() => {\r\n    if (reservations.length > 0) {\r\n      getHotelesFiltrados();\r\n    }\r\n  }, [reservations, getHotelesFiltrados]);\r\n\r\n  const handleHotelFiltradoChange = (event) => {\r\n    setHotelFiltrado(event.target.value);\r\n  };\r\n\r\n  const handleStartDateFilterChange = (event) => {\r\n    setStartDateFilter(event.target.value);\r\n  };\r\n\r\n  const handleEndDateFilterChange = (event) => {\r\n    setEndDateFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"reservations-container1\">\r\n      <div className=\"reservations-container2\">\r\n        <div className=\"filters-container\">\r\n          <div>\r\n            <label htmlFor=\"hotelFilter\">Hotel:</label>\r\n            <ul id=\"hotelFilter\">\r\n              <li value=\"\" onClick={handleHotelFiltradoChange}>Todos los hoteles</li>\r\n              {hoteles.map((hotel) => (\r\n                <li key={hotel.id} value={hotel.id} onClick={handleHotelFiltradoChange}>\r\n                  {hotel.nombre}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"startDateFilter\">Fecha de inicio:</label>\r\n            <input type=\"date\" id=\"startDateFilter\" value={startDateFilter} onChange={handleStartDateFilterChange} />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"endDateFilter\">Fecha de fin:</label>\r\n            <input type=\"date\" id=\"endDateFilter\" value={endDateFilter} onChange={handleEndDateFilterChange} />\r\n          </div>\r\n        </div>\r\n        <h4>Datos de tus reservas:</h4>\r\n        {reservations.length ? (\r\n          reservations.map((reservation) => {\r\n            const hotel = hotelesFiltrados.find((hotel) => hotel.id === reservation.hotel_id);\r\n            const fechaInicio = `${reservation.dia_inicio}/${reservation.mes_inicio}/${reservation.anio_inicio}`;\r\n            const fechaFin = `${reservation.dia_final}/${reservation.mes_final}/${reservation.anio_final}`;\r\n            return (\r\n              <div className=\"reservation-card\" key={reservation.ID}>\r\n                <p>Hotel: {hotel ? hotel.nombre : 'Hotel desconocido'}</p>\r\n                <p>Fecha de llegada: {fechaInicio}</p>\r\n                <p>Fecha de fin: {fechaFin}</p>\r\n                <p>Gracias por elegirnos!</p>\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <p>No tienes reservas</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;*/\r\n\r\n\r\n\r\n\r\n\r\n/*import React, { useContext, useEffect, useState, useCallback } from 'react';\r\nimport { AuthContext } from './login/auth';\r\nimport './estilo/reservas_cliente.css';\r\n\r\nconst HomePage = () => {\r\n  const [reservations, setReservations] = useState([]);\r\n  const [hoteles, setHoteles] = useState([]);\r\n  const { isLoggedCliente } = useContext(AuthContext);\r\n\r\n  const getHoteles = useCallback(async () => {\r\n    try {\r\n      const hotelesArray = [];\r\n      for (let i = 0; i < reservations.length; i++) {\r\n        const reserva = reservations[i];\r\n        const request = await fetch(`http://localhost:8090/cliente/hotel/${reserva.hotel_id}`);\r\n        const response = await request.json();\r\n        hotelesArray.push(response);\r\n      }\r\n      setHoteles(hotelesArray);\r\n    } catch (error) {\r\n      console.log(\"No se pudieron obtener los hoteles:\", error);\r\n    }\r\n  }, [reservations]);\r\n\r\n  const getReservations = useCallback(async () => {\r\n    if (isLoggedCliente) {\r\n      const accountId = localStorage.getItem(\"id_cliente\");\r\n      try {\r\n        const request = await fetch(`http://localhost:8090/cliente/reservas/${accountId}`);\r\n        const response = await request.json();\r\n        setReservations(response);\r\n      } catch (error) {\r\n        console.log(\"No se pudieron obtener las reservas:\", error);\r\n      }\r\n    } else {\r\n      window.location.href = '/';\r\n    }\r\n  }, [isLoggedCliente]);\r\n\r\n  useEffect(() => {\r\n    getReservations();\r\n  }, [getReservations]);\r\n\r\n  useEffect(() => {\r\n    getHoteles();\r\n  }, [getHoteles]); // Se agrega getHoteles como dependencia separada\r\n\r\n  return (\r\n    <div className=\"reservations-container1\">\r\n      <div className=\"reservations-container2\">\r\n        <h4>Datos de tus reservas:</h4>\r\n        {reservations.length ? (\r\n          reservations.map((reservation) => {\r\n            const hotel = hoteles.find((hotel) => hotel.id === reservation.hotel_id);\r\n            const fechaInicio = `${reservation.dia_inicio}/${reservation.mes_inicio}/${reservation.anio_inicio}`;\r\n            const fechaFin = `${reservation.dia_final}/${reservation.mes_final}/${reservation.anio_final}`;\r\n            return (\r\n              <div className=\"reservation-card\" key={reservation.ID}>\r\n                <p>Hotel: {hotel ? hotel.nombre : 'Hotel desconocido'}</p>\r\n                <p>Fecha de llegada: {fechaInicio}</p>\r\n                <p>Fecha de fin: {fechaFin}</p>\r\n                <p>Gracias por elegirnos!</p>\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <p>No tienes reservas</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}