{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toBeChecked = toBeChecked;\nvar _ariaQuery = require(\"aria-query\");\nvar _utils = require(\"./utils\");\nfunction toBeChecked(element) {\n  (0, _utils.checkHtmlElement)(element, toBeChecked, this);\n  const isValidInput = () => {\n    return element.tagName.toLowerCase() === 'input' && ['checkbox', 'radio'].includes(element.type);\n  };\n  const isValidAriaElement = () => {\n    return roleSupportsChecked(element.getAttribute('role')) && ['true', 'false'].includes(element.getAttribute('aria-checked'));\n  };\n  if (!isValidInput() && !isValidAriaElement()) {\n    return {\n      pass: false,\n      message: () => `only inputs with type=\"checkbox\" or type=\"radio\" or elements with ${supportedRolesSentence()} and a valid aria-checked attribute can be used with .toBeChecked(). Use .toHaveValue() instead`\n    };\n  }\n  const isChecked = () => {\n    if (isValidInput()) return element.checked;\n    return element.getAttribute('aria-checked') === 'true';\n  };\n  return {\n    pass: isChecked(),\n    message: () => {\n      const is = isChecked() ? 'is' : 'is not';\n      return [this.utils.matcherHint(`${this.isNot ? '.not' : ''}.toBeChecked`, 'element', ''), '', `Received element ${is} checked:`, `  ${this.utils.printReceived(element.cloneNode(false))}`].join('\\n');\n    }\n  };\n}\nfunction supportedRolesSentence() {\n  return (0, _utils.toSentence)(supportedRoles().map(role => `role=\"${role}\"`), {\n    lastWordConnector: ' or '\n  });\n}\nfunction supportedRoles() {\n  return _ariaQuery.roles.keys().filter(roleSupportsChecked);\n}\nfunction roleSupportsChecked(role) {\n  var _roles$get;\n  return ((_roles$get = _ariaQuery.roles.get(role)) == null ? void 0 : _roles$get.props['aria-checked']) !== undefined;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","toBeChecked","_ariaQuery","require","_utils","element","checkHtmlElement","isValidInput","tagName","toLowerCase","includes","type","isValidAriaElement","roleSupportsChecked","getAttribute","pass","message","supportedRolesSentence","isChecked","checked","is","utils","matcherHint","isNot","printReceived","cloneNode","join","toSentence","supportedRoles","map","role","lastWordConnector","roles","keys","filter","_roles$get","get","props","undefined"],"sources":["C:/Users/tomig/OneDrive/Escritorio/Visual_Studio_Code/Arquitectura_De_Software_I/arqsoft/Proyecto/frontend/client/node_modules/@testing-library/jest-dom/dist/to-be-checked.js"],"sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.toBeChecked = toBeChecked;\r\n\r\nvar _ariaQuery = require(\"aria-query\");\r\n\r\nvar _utils = require(\"./utils\");\r\n\r\nfunction toBeChecked(element) {\r\n  (0, _utils.checkHtmlElement)(element, toBeChecked, this);\r\n\r\n  const isValidInput = () => {\r\n    return element.tagName.toLowerCase() === 'input' && ['checkbox', 'radio'].includes(element.type);\r\n  };\r\n\r\n  const isValidAriaElement = () => {\r\n    return roleSupportsChecked(element.getAttribute('role')) && ['true', 'false'].includes(element.getAttribute('aria-checked'));\r\n  };\r\n\r\n  if (!isValidInput() && !isValidAriaElement()) {\r\n    return {\r\n      pass: false,\r\n      message: () => `only inputs with type=\"checkbox\" or type=\"radio\" or elements with ${supportedRolesSentence()} and a valid aria-checked attribute can be used with .toBeChecked(). Use .toHaveValue() instead`\r\n    };\r\n  }\r\n\r\n  const isChecked = () => {\r\n    if (isValidInput()) return element.checked;\r\n    return element.getAttribute('aria-checked') === 'true';\r\n  };\r\n\r\n  return {\r\n    pass: isChecked(),\r\n    message: () => {\r\n      const is = isChecked() ? 'is' : 'is not';\r\n      return [this.utils.matcherHint(`${this.isNot ? '.not' : ''}.toBeChecked`, 'element', ''), '', `Received element ${is} checked:`, `  ${this.utils.printReceived(element.cloneNode(false))}`].join('\\n');\r\n    }\r\n  };\r\n}\r\n\r\nfunction supportedRolesSentence() {\r\n  return (0, _utils.toSentence)(supportedRoles().map(role => `role=\"${role}\"`), {\r\n    lastWordConnector: ' or '\r\n  });\r\n}\r\n\r\nfunction supportedRoles() {\r\n  return _ariaQuery.roles.keys().filter(roleSupportsChecked);\r\n}\r\n\r\nfunction roleSupportsChecked(role) {\r\n  var _roles$get;\r\n\r\n  return ((_roles$get = _ariaQuery.roles.get(role)) == null ? void 0 : _roles$get.props['aria-checked']) !== undefined;\r\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,WAAW,GAAGA,WAAW;AAEjC,IAAIC,UAAU,GAAGC,OAAO,CAAC,YAAY,CAAC;AAEtC,IAAIC,MAAM,GAAGD,OAAO,CAAC,SAAS,CAAC;AAE/B,SAASF,WAAWA,CAACI,OAAO,EAAE;EAC5B,CAAC,CAAC,EAAED,MAAM,CAACE,gBAAgB,EAAED,OAAO,EAAEJ,WAAW,EAAE,IAAI,CAAC;EAExD,MAAMM,YAAY,GAAGA,CAAA,KAAM;IACzB,OAAOF,OAAO,CAACG,OAAO,CAACC,WAAW,EAAE,KAAK,OAAO,IAAI,CAAC,UAAU,EAAE,OAAO,CAAC,CAACC,QAAQ,CAACL,OAAO,CAACM,IAAI,CAAC;EAClG,CAAC;EAED,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,OAAOC,mBAAmB,CAACR,OAAO,CAACS,YAAY,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAACJ,QAAQ,CAACL,OAAO,CAACS,YAAY,CAAC,cAAc,CAAC,CAAC;EAC9H,CAAC;EAED,IAAI,CAACP,YAAY,EAAE,IAAI,CAACK,kBAAkB,EAAE,EAAE;IAC5C,OAAO;MACLG,IAAI,EAAE,KAAK;MACXC,OAAO,EAAEA,CAAA,KAAO,qEAAoEC,sBAAsB,EAAG;IAC/G,CAAC;EACH;EAEA,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAIX,YAAY,EAAE,EAAE,OAAOF,OAAO,CAACc,OAAO;IAC1C,OAAOd,OAAO,CAACS,YAAY,CAAC,cAAc,CAAC,KAAK,MAAM;EACxD,CAAC;EAED,OAAO;IACLC,IAAI,EAAEG,SAAS,EAAE;IACjBF,OAAO,EAAEA,CAAA,KAAM;MACb,MAAMI,EAAE,GAAGF,SAAS,EAAE,GAAG,IAAI,GAAG,QAAQ;MACxC,OAAO,CAAC,IAAI,CAACG,KAAK,CAACC,WAAW,CAAE,GAAE,IAAI,CAACC,KAAK,GAAG,MAAM,GAAG,EAAG,cAAa,EAAE,SAAS,EAAE,EAAE,CAAC,EAAE,EAAE,EAAG,oBAAmBH,EAAG,WAAU,EAAG,KAAI,IAAI,CAACC,KAAK,CAACG,aAAa,CAACnB,OAAO,CAACoB,SAAS,CAAC,KAAK,CAAC,CAAE,EAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;IACxM;EACF,CAAC;AACH;AAEA,SAAST,sBAAsBA,CAAA,EAAG;EAChC,OAAO,CAAC,CAAC,EAAEb,MAAM,CAACuB,UAAU,EAAEC,cAAc,EAAE,CAACC,GAAG,CAACC,IAAI,IAAK,SAAQA,IAAK,GAAE,CAAC,EAAE;IAC5EC,iBAAiB,EAAE;EACrB,CAAC,CAAC;AACJ;AAEA,SAASH,cAAcA,CAAA,EAAG;EACxB,OAAO1B,UAAU,CAAC8B,KAAK,CAACC,IAAI,EAAE,CAACC,MAAM,CAACrB,mBAAmB,CAAC;AAC5D;AAEA,SAASA,mBAAmBA,CAACiB,IAAI,EAAE;EACjC,IAAIK,UAAU;EAEd,OAAO,CAAC,CAACA,UAAU,GAAGjC,UAAU,CAAC8B,KAAK,CAACI,GAAG,CAACN,IAAI,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGK,UAAU,CAACE,KAAK,CAAC,cAAc,CAAC,MAAMC,SAAS;AACtH"},"metadata":{},"sourceType":"script","externalDependencies":[]}