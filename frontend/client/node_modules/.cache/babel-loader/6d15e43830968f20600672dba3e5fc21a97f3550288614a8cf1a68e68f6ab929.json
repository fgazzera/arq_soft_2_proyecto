{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomig\\\\OneDrive\\\\Escritorio\\\\Visual_Studio_Code\\\\Arquitectura_De_Software_I\\\\arqsoft\\\\Proyecto\\\\frontend\\\\client\\\\src\\\\pages\\\\reservas_cliente.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState, useCallback } from 'react';\nimport { AuthContext } from './login/auth';\nimport './estilo/reservas_cliente.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [reservations, setReservations] = useState([]);\n  const [hotelesFiltrados, setHotelesFiltrados] = useState([]);\n  const [hoteles, setHoteles] = useState([]);\n  const [uniqueHoteles, setUniqueHoteles] = useState([]);\n  const {\n    isLoggedCliente\n  } = useContext(AuthContext);\n  const [hotelFiltrado, setHotelFiltrado] = useState('');\n  const [startDateFilter, setStartDateFilter] = useState('');\n  const [endDateFilter, setEndDateFilter] = useState('');\n  const getHoteles = useCallback(async () => {\n    try {\n      const hotelesArray = [];\n      for (let i = 0; i < reservations.length; i++) {\n        const reserva = reservations[i];\n        const request = await fetch(`http://localhost:8090/cliente/hotel/${reserva.hotel_id}`);\n        const response = await request.json();\n        if (response.nombre) {\n          console.log(response.nombre);\n          hotelesArray.push(response.nombre);\n          console.log(hotelesArray);\n        }\n      }\n      console.log(Array.from(new Set(hotelesArray)));\n      setHoteles(Array.from(new Set(hotelesArray)));\n    } catch (error) {\n      console.log(\"No se pudieron obtener los hoteles:\", error);\n    }\n  }, [reservations]);\n  const getHotelesFiltrados = useCallback(async () => {\n    try {\n      const hotelesArray = [];\n      for (let i = 0; i < reservations.length; i++) {\n        const reserva = reservations[i];\n        if (reserva.hotel_id === hotelFiltrado) {\n          const request = await fetch(`http://localhost:8090/cliente/hotel/${reserva.hotel_id}`);\n          const response = await request.json();\n          hotelesArray.push(response);\n        }\n      }\n      setHotelesFiltrados(hotelesArray);\n    } catch (error) {\n      console.log(\"No se pudieron obtener los hoteles:\", error);\n    }\n  }, [reservations, hotelFiltrado]);\n  const getReservations = useCallback(async () => {\n    if (isLoggedCliente) {\n      const accountId = localStorage.getItem(\"id_cliente\");\n      try {\n        const request = await fetch(`http://localhost:8090/cliente/reservas/${accountId}`);\n        const response = await request.json();\n        setReservations(response);\n      } catch (error) {\n        console.log(\"No se pudieron obtener las reservas:\", error);\n      }\n    } else {\n      window.location.href = '/';\n    }\n  }, [isLoggedCliente]);\n  useEffect(() => {\n    getReservations();\n  }, [getReservations]);\n  useEffect(() => {\n    getHoteles();\n  }, [getHoteles]);\n  useEffect(() => {\n    getHotelesFiltrados();\n  }, [getHotelesFiltrados]);\n  const handleHotelFiltradoChange = event => {\n    alert(\"Hola\");\n    setHotelFiltrado(event.target.value);\n  };\n  const handleStartDateFilterChange = event => {\n    setStartDateFilter(event.target.value);\n  };\n  const handleEndDateFilterChange = event => {\n    setEndDateFilter(event.target.value);\n  };\n\n  // Obtener una lista de nombres de hoteles Ãºnicos\n  //const uniqueHotelNames = Array.from(new Set(hoteles.map((hotel) => hotel.nombre)));\n  //\n  //const filteredReservations = reservations.filter((reservation) => {\n  //  const hotel = hoteles.find((hotel) => hotel.id === reservation.hotel_id);\n  //  const hotelName = hotel ? hotel.nombre : 'Hotel desconocido';\n  //  const startDate = new Date(reservation.anio_inicio, reservation.mes_inicio - 1, reservation.dia_inicio - 1);\n  //  const endDate = new Date(reservation.anio_final, reservation.mes_final - 1, reservation.dia_final - 1);\n  //\n  //  // Aplicar filtros\n  //  const hotelFilterMatch = !hotelFilter.isFiltering || hotelName === hotelFilter.selectedHotel;\n  //  const startDateFilterMatch = startDateFilter === '' || startDate >= new Date(startDateFilter);\n  //  const endDateFilterMatch = endDateFilter === '' || endDate <= new Date(endDateFilter);\n  //\n  //  return hotelFilterMatch && startDateFilterMatch && endDateFilterMatch;\n  //});\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reservations-container1\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reservations-container2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"hotelFilter\",\n            children: \"Hotel:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            id: \"hotelFilter\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              value: \"\",\n              onClick: handleHotelFiltradoChange,\n              children: \"Todos los hoteles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), hoteles.map(hotel => /*#__PURE__*/_jsxDEV(\"li\", {\n              value: hotel.id,\n              onClick: handleHotelFiltradoChange,\n              children: hotel.nombre\n            }, hotel.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"startDateFilter\",\n            children: \"Fecha de inicio:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"startDateFilter\",\n            value: startDateFilter,\n            onChange: handleStartDateFilterChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"endDateFilter\",\n            children: \"Fecha de fin:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"endDateFilter\",\n            value: endDateFilter,\n            onChange: handleEndDateFilterChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Datos de tus reservas:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), reservations.length ? reservations.map(reservation => {\n        const hotel = hotelesFiltrados.find(hotel => hotel.id === reservation.hotel_id);\n        const fechaInicio = `${reservation.dia_inicio}/${reservation.mes_inicio}/${reservation.anio_inicio}`;\n        const fechaFin = `${reservation.dia_final}/${reservation.mes_final}/${reservation.anio_final}`;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reservation-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Hotel: \", hotel ? hotel.nombre : 'Hotel desconocido']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Fecha de llegada: \", fechaInicio]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Fecha de fin: \", fechaFin]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Gracias por elegirnos!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this)]\n        }, reservation.ID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No tienes reservas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"0Evd/+531QZeOG6M1G40YdARcz8=\");\n_c = HomePage;\nexport default HomePage;\n\n/*import React, { useContext, useEffect, useState, useCallback } from 'react';\r\nimport { AuthContext } from './login/auth';\r\nimport './estilo/reservas_cliente.css';\r\n\r\nconst HomePage = () => {\r\n  const [reservations, setReservations] = useState([]);\r\n  const [hoteles, setHoteles] = useState([]);\r\n  const { isLoggedCliente } = useContext(AuthContext);\r\n\r\n  const getHoteles = useCallback(async () => {\r\n    try {\r\n      const hotelesArray = [];\r\n      for (let i = 0; i < reservations.length; i++) {\r\n        const reserva = reservations[i];\r\n        const request = await fetch(`http://localhost:8090/cliente/hotel/${reserva.hotel_id}`);\r\n        const response = await request.json();\r\n        hotelesArray.push(response);\r\n      }\r\n      setHoteles(hotelesArray);\r\n    } catch (error) {\r\n      console.log(\"No se pudieron obtener los hoteles:\", error);\r\n    }\r\n  }, [reservations]);\r\n\r\n  const getReservations = useCallback(async () => {\r\n    if (isLoggedCliente) {\r\n      const accountId = localStorage.getItem(\"id_cliente\");\r\n      try {\r\n        const request = await fetch(`http://localhost:8090/cliente/reservas/${accountId}`);\r\n        const response = await request.json();\r\n        setReservations(response);\r\n      } catch (error) {\r\n        console.log(\"No se pudieron obtener las reservas:\", error);\r\n      }\r\n    } else {\r\n      window.location.href = '/';\r\n    }\r\n  }, [isLoggedCliente]);\r\n\r\n  useEffect(() => {\r\n    getReservations();\r\n  }, [getReservations]);\r\n\r\n  useEffect(() => {\r\n    getHoteles();\r\n  }, [getHoteles]); // Se agrega getHoteles como dependencia separada\r\n\r\n  return (\r\n    <div className=\"reservations-container1\">\r\n      <div className=\"reservations-container2\">\r\n        <h4>Datos de tus reservas:</h4>\r\n        {reservations.length ? (\r\n          reservations.map((reservation) => {\r\n            const hotel = hoteles.find((hotel) => hotel.id === reservation.hotel_id);\r\n            const fechaInicio = `${reservation.dia_inicio}/${reservation.mes_inicio}/${reservation.anio_inicio}`;\r\n            const fechaFin = `${reservation.dia_final}/${reservation.mes_final}/${reservation.anio_final}`;\r\n            return (\r\n              <div className=\"reservation-card\" key={reservation.ID}>\r\n                <p>Hotel: {hotel ? hotel.nombre : 'Hotel desconocido'}</p>\r\n                <p>Fecha de llegada: {fechaInicio}</p>\r\n                <p>Fecha de fin: {fechaFin}</p>\r\n                <p>Gracias por elegirnos!</p>\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <p>No tienes reservas</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;*/\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useCallback","AuthContext","jsxDEV","_jsxDEV","HomePage","_s","reservations","setReservations","hotelesFiltrados","setHotelesFiltrados","hoteles","setHoteles","uniqueHoteles","setUniqueHoteles","isLoggedCliente","hotelFiltrado","setHotelFiltrado","startDateFilter","setStartDateFilter","endDateFilter","setEndDateFilter","getHoteles","hotelesArray","i","length","reserva","request","fetch","hotel_id","response","json","nombre","console","log","push","Array","from","Set","error","getHotelesFiltrados","getReservations","accountId","localStorage","getItem","window","location","href","handleHotelFiltradoChange","event","alert","target","value","handleStartDateFilterChange","handleEndDateFilterChange","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","map","hotel","type","onChange","reservation","find","fechaInicio","dia_inicio","mes_inicio","anio_inicio","fechaFin","dia_final","mes_final","anio_final","ID","_c","$RefreshReg$"],"sources":["C:/Users/tomig/OneDrive/Escritorio/Visual_Studio_Code/Arquitectura_De_Software_I/arqsoft/Proyecto/frontend/client/src/pages/reservas_cliente.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState, useCallback } from 'react';\r\nimport { AuthContext } from './login/auth';\r\nimport './estilo/reservas_cliente.css';\r\n\r\nconst HomePage = () => {\r\n  const [reservations, setReservations] = useState([]);\r\n  const [hotelesFiltrados, setHotelesFiltrados] = useState([]);\r\n  const [hoteles, setHoteles] = useState([]);\r\n  const [uniqueHoteles, setUniqueHoteles] = useState([]);\r\n  const { isLoggedCliente } = useContext(AuthContext);\r\n  const [hotelFiltrado, setHotelFiltrado] = useState('');\r\n  const [startDateFilter, setStartDateFilter] = useState('');\r\n  const [endDateFilter, setEndDateFilter] = useState('');\r\n\r\n  const getHoteles = useCallback(async () => {\r\n    try {\r\n      const hotelesArray = [];\r\n      for (let i = 0; i < reservations.length; i++) {\r\n        const reserva = reservations[i];\r\n        const request = await fetch(`http://localhost:8090/cliente/hotel/${reserva.hotel_id}`);\r\n        const response = await request.json();\r\n        if (response.nombre) {\r\n          console.log(response.nombre);\r\n          hotelesArray.push(response.nombre);\r\n          console.log(hotelesArray);\r\n        }\r\n      }\r\n      console.log(Array.from(new Set(hotelesArray)));\r\n      setHoteles(Array.from(new Set(hotelesArray)));\r\n    } catch (error) {\r\n      console.log(\"No se pudieron obtener los hoteles:\", error);\r\n    }\r\n  }, [reservations]);\r\n\r\n  const getHotelesFiltrados = useCallback(async () => {\r\n    try {\r\n      const hotelesArray = [];\r\n      for (let i = 0; i < reservations.length; i++) {\r\n        const reserva = reservations[i];\r\n        if (reserva.hotel_id === hotelFiltrado) {\r\n          const request = await fetch(`http://localhost:8090/cliente/hotel/${reserva.hotel_id}`);\r\n          const response = await request.json();\r\n          hotelesArray.push(response);\r\n        }\r\n      }\r\n      setHotelesFiltrados(hotelesArray);\r\n    } catch (error) {\r\n      console.log(\"No se pudieron obtener los hoteles:\", error);\r\n    }\r\n  }, [reservations, hotelFiltrado]);\r\n\r\n  const getReservations = useCallback(async () => {\r\n    if (isLoggedCliente) {\r\n      const accountId = localStorage.getItem(\"id_cliente\");\r\n      try {\r\n        const request = await fetch(`http://localhost:8090/cliente/reservas/${accountId}`);\r\n        const response = await request.json();\r\n        setReservations(response);\r\n      } catch (error) {\r\n        console.log(\"No se pudieron obtener las reservas:\", error);\r\n      }\r\n    } else {\r\n      window.location.href = '/';\r\n    }\r\n  }, [isLoggedCliente]);\r\n\r\n  useEffect(() => {\r\n    getReservations();\r\n  }, [getReservations]);\r\n\r\n  useEffect(() => {\r\n    getHoteles();\r\n  }, [getHoteles]);\r\n  \r\n  useEffect(() => {\r\n    getHotelesFiltrados();\r\n  }, [getHotelesFiltrados]);\r\n\r\n  const handleHotelFiltradoChange = (event) => {\r\n    alert(\"Hola\");\r\n    setHotelFiltrado(event.target.value);\r\n  };\r\n\r\n  const handleStartDateFilterChange = (event) => {\r\n    setStartDateFilter(event.target.value);\r\n  };\r\n\r\n  const handleEndDateFilterChange = (event) => {\r\n    setEndDateFilter(event.target.value);\r\n  };\r\n\r\n  // Obtener una lista de nombres de hoteles Ãºnicos\r\n  //const uniqueHotelNames = Array.from(new Set(hoteles.map((hotel) => hotel.nombre)));\r\n//\r\n  //const filteredReservations = reservations.filter((reservation) => {\r\n  //  const hotel = hoteles.find((hotel) => hotel.id === reservation.hotel_id);\r\n  //  const hotelName = hotel ? hotel.nombre : 'Hotel desconocido';\r\n  //  const startDate = new Date(reservation.anio_inicio, reservation.mes_inicio - 1, reservation.dia_inicio - 1);\r\n  //  const endDate = new Date(reservation.anio_final, reservation.mes_final - 1, reservation.dia_final - 1);\r\n//\r\n  //  // Aplicar filtros\r\n  //  const hotelFilterMatch = !hotelFilter.isFiltering || hotelName === hotelFilter.selectedHotel;\r\n  //  const startDateFilterMatch = startDateFilter === '' || startDate >= new Date(startDateFilter);\r\n  //  const endDateFilterMatch = endDateFilter === '' || endDate <= new Date(endDateFilter);\r\n//\r\n  //  return hotelFilterMatch && startDateFilterMatch && endDateFilterMatch;\r\n  //});\r\n\r\n  return (\r\n    <div className=\"reservations-container1\">\r\n      <div className=\"reservations-container2\">\r\n        <div className=\"filters-container\">\r\n          <div>\r\n            <label htmlFor=\"hotelFilter\">Hotel:</label>\r\n            <ul id=\"hotelFilter\">\r\n              <li value=\"\" onClick={handleHotelFiltradoChange}>Todos los hoteles</li>\r\n              {hoteles.map((hotel) => (\r\n                <li key={hotel.id} value={hotel.id} onClick={handleHotelFiltradoChange}>\r\n                  {hotel.nombre}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"startDateFilter\">Fecha de inicio:</label>\r\n            <input type=\"date\" id=\"startDateFilter\" value={startDateFilter} onChange={handleStartDateFilterChange} />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"endDateFilter\">Fecha de fin:</label>\r\n            <input type=\"date\" id=\"endDateFilter\" value={endDateFilter} onChange={handleEndDateFilterChange} />\r\n          </div>\r\n        </div>\r\n        <h4>Datos de tus reservas:</h4>\r\n        {reservations.length ? (\r\n          reservations.map((reservation) => {\r\n            const hotel = hotelesFiltrados.find((hotel) => hotel.id === reservation.hotel_id);\r\n            const fechaInicio = `${reservation.dia_inicio}/${reservation.mes_inicio}/${reservation.anio_inicio}`;\r\n            const fechaFin = `${reservation.dia_final}/${reservation.mes_final}/${reservation.anio_final}`;\r\n            return (\r\n              <div className=\"reservation-card\" key={reservation.ID}>\r\n                <p>Hotel: {hotel ? hotel.nombre : 'Hotel desconocido'}</p>\r\n                <p>Fecha de llegada: {fechaInicio}</p>\r\n                <p>Fecha de fin: {fechaFin}</p>\r\n                <p>Gracias por elegirnos!</p>\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <p>No tienes reservas</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*import React, { useContext, useEffect, useState, useCallback } from 'react';\r\nimport { AuthContext } from './login/auth';\r\nimport './estilo/reservas_cliente.css';\r\n\r\nconst HomePage = () => {\r\n  const [reservations, setReservations] = useState([]);\r\n  const [hoteles, setHoteles] = useState([]);\r\n  const { isLoggedCliente } = useContext(AuthContext);\r\n\r\n  const getHoteles = useCallback(async () => {\r\n    try {\r\n      const hotelesArray = [];\r\n      for (let i = 0; i < reservations.length; i++) {\r\n        const reserva = reservations[i];\r\n        const request = await fetch(`http://localhost:8090/cliente/hotel/${reserva.hotel_id}`);\r\n        const response = await request.json();\r\n        hotelesArray.push(response);\r\n      }\r\n      setHoteles(hotelesArray);\r\n    } catch (error) {\r\n      console.log(\"No se pudieron obtener los hoteles:\", error);\r\n    }\r\n  }, [reservations]);\r\n\r\n  const getReservations = useCallback(async () => {\r\n    if (isLoggedCliente) {\r\n      const accountId = localStorage.getItem(\"id_cliente\");\r\n      try {\r\n        const request = await fetch(`http://localhost:8090/cliente/reservas/${accountId}`);\r\n        const response = await request.json();\r\n        setReservations(response);\r\n      } catch (error) {\r\n        console.log(\"No se pudieron obtener las reservas:\", error);\r\n      }\r\n    } else {\r\n      window.location.href = '/';\r\n    }\r\n  }, [isLoggedCliente]);\r\n\r\n  useEffect(() => {\r\n    getReservations();\r\n  }, [getReservations]);\r\n\r\n  useEffect(() => {\r\n    getHoteles();\r\n  }, [getHoteles]); // Se agrega getHoteles como dependencia separada\r\n\r\n  return (\r\n    <div className=\"reservations-container1\">\r\n      <div className=\"reservations-container2\">\r\n        <h4>Datos de tus reservas:</h4>\r\n        {reservations.length ? (\r\n          reservations.map((reservation) => {\r\n            const hotel = hoteles.find((hotel) => hotel.id === reservation.hotel_id);\r\n            const fechaInicio = `${reservation.dia_inicio}/${reservation.mes_inicio}/${reservation.anio_inicio}`;\r\n            const fechaFin = `${reservation.dia_final}/${reservation.mes_final}/${reservation.anio_final}`;\r\n            return (\r\n              <div className=\"reservation-card\" key={reservation.ID}>\r\n                <p>Hotel: {hotel ? hotel.nombre : 'Hotel desconocido'}</p>\r\n                <p>Fecha de llegada: {fechaInicio}</p>\r\n                <p>Fecha de fin: {fechaFin}</p>\r\n                <p>Gracias por elegirnos!</p>\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <p>No tienes reservas</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}