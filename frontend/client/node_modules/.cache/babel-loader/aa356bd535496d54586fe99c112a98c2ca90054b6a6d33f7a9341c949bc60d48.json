{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomig\\\\OneDrive\\\\Escritorio\\\\Visual_Studio_Code\\\\Arquitectura_De_Software_I\\\\arqsoft\\\\Proyecto\\\\frontend\\\\client\\\\src\\\\pages\\\\reservas_cliente.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState, useCallback } from 'react';\nimport { AuthContext } from './login/auth';\nimport './estilo/reservas_cliente.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [reservations, setReservations] = useState([]);\n  const [reservasFiltradas, setReservasFiltradas] = useState([]);\n  const [hoteles, setHoteles] = useState([]);\n  const {\n    isLoggedCliente\n  } = useContext(AuthContext);\n  const [hotelFiltrado, setHotelFiltrado] = useState('');\n  const [startDateFilter, setStartDateFilter] = useState('');\n  const [endDateFilter, setEndDateFilter] = useState('');\n\n  /*const getHoteles = useCallback(async () => {\r\n    try {\r\n      const hotelesArray = [];\r\n      for (let i = 0; i < reservations.length; i++) {\r\n        const reserva = reservations[i];\r\n        const request = await fetch(`http://localhost:8090/cliente/hotel/${reserva.hotel_id}`);\r\n        const response = await request.json();\r\n        hotelesArray.push(response);\r\n      }\r\n      setHoteles(hotelesArray);\r\n    } catch (error) {\r\n      console.log(\"No se pudieron obtener los hoteles:\", error);\r\n    }\r\n  }, [reservations]);*/\n\n  const getHoteles = useCallback(async () => {\n    try {\n      const hotelesArray = [];\n      for (let i = 0; i < reservations.length; i++) {\n        const reserva = reservations[i];\n        const request = await fetch(`http://localhost:8090/cliente/hotel/${reserva.hotel_id}`);\n        const response = await request.json();\n        hotelesArray.push({\n          id: response.id,\n          nombre: response.nombre\n        });\n      }\n      const uniqueHotels = Array.from(new Set(hotelesArray.map(hotel => hotel.id))).map(id => {\n        return hotelesArray.find(hotel => hotel.id === id);\n      });\n      setHoteles(uniqueHotels);\n    } catch (error) {\n      console.log(\"No se pudieron obtener los hoteles:\", error);\n    }\n  }, [reservations]);\n  const getReservations = useCallback(async () => {\n    if (isLoggedCliente) {\n      const accountId = localStorage.getItem(\"id_cliente\");\n      try {\n        const request = await fetch(`http://localhost:8090/cliente/reservas/${accountId}`);\n        const response = await request.json();\n        setReservations(response);\n        setReservasFiltradas(response);\n      } catch (error) {\n        console.log(\"No se pudieron obtener las reservas:\", error);\n      }\n    } else {\n      window.location.href = '/';\n    }\n  }, [isLoggedCliente]);\n  const getReservasFiltradas = useCallback(async () => {\n    const reservasArray = [];\n    const hotelesArray = [];\n    const startDateObj = new Date(startDateFilter);\n    const endDateObj = new Date(endDateFilter);\n    try {\n      if (startDateFilter && endDateFilter) {\n        for (let i = 0; i < hoteles.length; i++) {\n          const request = await fetch(`http://localhost:8090/cliente/reservas-por-fecha/${startDateObj.getFullYear()}/${startDateObj.getMonth() + 1}/${startDateObj.getDate() + 1}/${endDateObj.getFullYear()}/${endDateObj.getMonth() + 1}/${endDateObj.getDate() + 1}`);\n          const response = await request.json();\n          hotelesArray.push(re);\n        }\n      } else {\n        for (let i = 0; i < reservations.length; i++) {\n          const reserva = reservations[i];\n          hotelesArray.push(reserva);\n        }\n      }\n      for (let i = 0; i < hotelesArray.length; i++) {\n        const reserva = hotelesArray[i];\n        if (hotelFiltrado === '' || hotelFiltrado === 0 || reserva.hotel_id === hotelFiltrado) {\n          reservasArray.push(reserva);\n        }\n      }\n    } catch (error) {\n      console.log(\"No se pudieron obtener las reservas:\", error);\n    }\n    setReservasFiltradas(reservasArray);\n  }, [hotelFiltrado, startDateFilter, endDateFilter, hoteles]);\n  useEffect(() => {\n    getReservations();\n  }, [getReservations]);\n  useEffect(() => {\n    getReservasFiltradas();\n  }, [getReservasFiltradas]);\n  useEffect(() => {\n    getHoteles();\n  }, [getHoteles]);\n  const handleHotelFilterChange = event => {\n    setHotelFiltrado(event.target.value);\n  };\n  const handleStartDateFilterChange = event => {\n    setStartDateFilter(event.target.value);\n    const selectedStartDateObj = new Date(event.target.value);\n    const endDateObj = new Date(endDateFilter);\n    if (selectedStartDateObj > endDateObj) {\n      setEndDateFilter('');\n      alert(\"Fechas no validas\");\n    }\n  };\n  const handleEndDateFilterChange = event => {\n    setEndDateFilter(event.target.value);\n    const startDateObj = new Date(startDateFilter);\n    const selectedEndDateObj = new Date(event.target.value);\n    if (startDateObj > selectedEndDateObj) {\n      setEndDateFilter('');\n      alert(\"Fechas no validas\");\n    }\n  };\n\n  /*const filteredReservations = reservations.filter((reservation) => {\r\n    const hotel = hoteles.find((hotel) => hotel.id === reservation.hotel_id);\r\n    const hotelName = hotel ? hotel.nombre : 'Hotel desconocido';\r\n    //const startDate = new Date(reservation.anio_inicio, reservation.mes_inicio - 1, reservation.dia_inicio);\r\n    //const endDate = new Date(reservation.anio_final, reservation.mes_final - 1, reservation.dia_final);\r\n      // Aplicar filtros\r\n    const hotelFilterMatch = hotelName === hotelFiltrado.selectedHotel;\r\n    //const startDateFilterMatch = startDateFilter === '' || startDate >= new Date(startDateFilter);\r\n    //const endDateFilterMatch = endDateFilter === '' || endDate <= new Date(endDateFilter);\r\n      //return hotelFilterMatch && startDateFilterMatch && endDateFilterMatch;\r\n    return hotelFilterMatch;\r\n  });*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reservations-container1\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reservations-container2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"hotelFilter\",\n            children: \"Hotel:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            id: \"hotelFilter\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              value: \"0\",\n              onClick: handleHotelFilterChange,\n              children: \"Todos los hoteles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), hoteles.map(hotel => /*#__PURE__*/_jsxDEV(\"li\", {\n              value: hotel.id,\n              onClick: handleHotelFilterChange,\n              children: hotel.nombre\n            }, hotel.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"startDateFilter\",\n            children: \"Fecha de inicio:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"startDateFilter\",\n            value: startDateFilter,\n            onChange: handleStartDateFilterChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"endDateFilter\",\n            children: \"Fecha de fin:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"endDateFilter\",\n            value: endDateFilter,\n            onChange: handleEndDateFilterChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Datos de tus reservas:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), reservasFiltradas.length ? reservasFiltradas.map(reservation => {\n        const hotel = hoteles.find(hotel => hotel.id === reservation.hotel_id);\n        const fechaInicio = `${reservation.dia_inicio}/${reservation.mes_inicio}/${reservation.anio_inicio}`;\n        const fechaFin = `${reservation.dia_final}/${reservation.mes_final}/${reservation.anio_final}`;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reservation-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Hotel: \", hotel ? hotel.nombre : 'Hotel desconocido']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Fecha de llegada: \", fechaInicio]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Fecha de fin: \", fechaFin]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Gracias por elegirnos!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 17\n          }, this)]\n        }, reservation.ID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No tienes reservas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"vU6WUV2Thj6mdqSqIQsoyOAOayU=\");\n_c = HomePage;\nexport default HomePage;\n\n/*import React, { useContext, useEffect, useState, useCallback } from 'react';\r\nimport { AuthContext } from './login/auth';\r\nimport './estilo/reservas_cliente.css';\r\n\r\nconst HomePage = () => {\r\n  const [reservations, setReservations] = useState([]);\r\n  const [hotelesFiltrados, setHotelesFiltrados] = useState([]);\r\n  const [hoteles, setHoteles] = useState([]);\r\n  const { isLoggedCliente } = useContext(AuthContext);\r\n  const [hotelFiltrado, setHotelFiltrado] = useState('');\r\n  const [startDateFilter, setStartDateFilter] = useState('');\r\n  const [endDateFilter, setEndDateFilter] = useState('');\r\n\r\n  const getHoteles = useCallback(async () => {\r\n    try {\r\n      const hotelesArray = [];\r\n      for (let i = 0; i < reservations.length; i++) {\r\n        const reserva = reservations[i];\r\n        const request = await fetch(`http://localhost:8090/cliente/hotel/${reserva.hotel_id}`);\r\n        const response = await request.json();\r\n        hotelesArray.push(response);\r\n      }\r\n      setHoteles(Array.from(new Set(hotelesArray.map((hotel) => hotel.nombre))));\r\n    } catch (error) {\r\n      console.log(\"No se pudieron obtener los hoteles:\", error);\r\n    }\r\n  }, [reservations]);\r\n\r\n  const getHotelesFiltrados = useCallback(async () => {\r\n    try {\r\n      const hotelesArray = [];\r\n      for (let i = 0; i < reservations.length; i++) {\r\n        const reserva = reservations[i];\r\n        if (reserva.hotel_id === hotelFiltrado) {\r\n          const request = await fetch(`http://localhost:8090/cliente/hotel/${reserva.hotel_id}`);\r\n          const response = await request.json();\r\n          hotelesArray.push(response);\r\n        }\r\n      }\r\n      setHotelesFiltrados(hotelesArray);\r\n    } catch (error) {\r\n      console.log(\"No se pudieron obtener los hoteles:\", error);\r\n    }\r\n  }, [reservations, hotelFiltrado]);\r\n\r\n  const getReservations = useCallback(async () => {\r\n    if (isLoggedCliente) {\r\n      const accountId = localStorage.getItem(\"id_cliente\");\r\n      try {\r\n        const request = await fetch(`http://localhost:8090/cliente/reservas/${accountId}`);\r\n        const response = await request.json();\r\n        setReservations(response);\r\n      } catch (error) {\r\n        console.log(\"No se pudieron obtener las reservas:\", error);\r\n      }\r\n    } else {\r\n      window.location.href = '/';\r\n    }\r\n  }, [isLoggedCliente]);\r\n\r\n  useEffect(() => {\r\n    getReservations();\r\n  }, [getReservations]);\r\n\r\n  useEffect(() => {\r\n    if (reservations.length > 0) {\r\n      getHoteles();\r\n    }\r\n  }, [reservations, getHoteles]);\r\n  \r\n  useEffect(() => {\r\n    if (reservations.length > 0) {\r\n      getHotelesFiltrados();\r\n    }\r\n  }, [reservations, getHotelesFiltrados]);\r\n\r\n  const handleHotelFiltradoChange = (event) => {\r\n    setHotelFiltrado(event.target.value);\r\n  };\r\n\r\n  const handleStartDateFilterChange = (event) => {\r\n    setStartDateFilter(event.target.value);\r\n  };\r\n\r\n  const handleEndDateFilterChange = (event) => {\r\n    setEndDateFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"reservations-container1\">\r\n      <div className=\"reservations-container2\">\r\n        <div className=\"filters-container\">\r\n          <div>\r\n            <label htmlFor=\"hotelFilter\">Hotel:</label>\r\n            <ul id=\"hotelFilter\">\r\n              <li value=\"\" onClick={handleHotelFiltradoChange}>Todos los hoteles</li>\r\n              {hoteles.map((hotel) => (\r\n                <li key={hotel.id} value={hotel.id} onClick={handleHotelFiltradoChange}>\r\n                  {hotel.nombre}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"startDateFilter\">Fecha de inicio:</label>\r\n            <input type=\"date\" id=\"startDateFilter\" value={startDateFilter} onChange={handleStartDateFilterChange} />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"endDateFilter\">Fecha de fin:</label>\r\n            <input type=\"date\" id=\"endDateFilter\" value={endDateFilter} onChange={handleEndDateFilterChange} />\r\n          </div>\r\n        </div>\r\n        <h4>Datos de tus reservas:</h4>\r\n        {reservations.length ? (\r\n          reservations.map((reservation) => {\r\n            const hotel = hotelesFiltrados.find((hotel) => hotel.id === reservation.hotel_id);\r\n            const fechaInicio = `${reservation.dia_inicio}/${reservation.mes_inicio}/${reservation.anio_inicio}`;\r\n            const fechaFin = `${reservation.dia_final}/${reservation.mes_final}/${reservation.anio_final}`;\r\n            return (\r\n              <div className=\"reservation-card\" key={reservation.ID}>\r\n                <p>Hotel: {hotel ? hotel.nombre : 'Hotel desconocido'}</p>\r\n                <p>Fecha de llegada: {fechaInicio}</p>\r\n                <p>Fecha de fin: {fechaFin}</p>\r\n                <p>Gracias por elegirnos!</p>\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <p>No tienes reservas</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;*/\n\n/*import React, { useContext, useEffect, useState, useCallback } from 'react';\r\nimport { AuthContext } from './login/auth';\r\nimport './estilo/reservas_cliente.css';\r\n\r\nconst HomePage = () => {\r\n  const [reservations, setReservations] = useState([]);\r\n  const [hoteles, setHoteles] = useState([]);\r\n  const { isLoggedCliente } = useContext(AuthContext);\r\n\r\n  const getHoteles = useCallback(async () => {\r\n    try {\r\n      const hotelesArray = [];\r\n      for (let i = 0; i < reservations.length; i++) {\r\n        const reserva = reservations[i];\r\n        const request = await fetch(`http://localhost:8090/cliente/hotel/${reserva.hotel_id}`);\r\n        const response = await request.json();\r\n        hotelesArray.push(response);\r\n      }\r\n      setHoteles(hotelesArray);\r\n    } catch (error) {\r\n      console.log(\"No se pudieron obtener los hoteles:\", error);\r\n    }\r\n  }, [reservations]);\r\n\r\n  const getReservations = useCallback(async () => {\r\n    if (isLoggedCliente) {\r\n      const accountId = localStorage.getItem(\"id_cliente\");\r\n      try {\r\n        const request = await fetch(`http://localhost:8090/cliente/reservas/${accountId}`);\r\n        const response = await request.json();\r\n        setReservations(response);\r\n      } catch (error) {\r\n        console.log(\"No se pudieron obtener las reservas:\", error);\r\n      }\r\n    } else {\r\n      window.location.href = '/';\r\n    }\r\n  }, [isLoggedCliente]);\r\n\r\n  useEffect(() => {\r\n    getReservations();\r\n  }, [getReservations]);\r\n\r\n  useEffect(() => {\r\n    getHoteles();\r\n  }, [getHoteles]); // Se agrega getHoteles como dependencia separada\r\n\r\n  return (\r\n    <div className=\"reservations-container1\">\r\n      <div className=\"reservations-container2\">\r\n        <h4>Datos de tus reservas:</h4>\r\n        {reservations.length ? (\r\n          reservations.map((reservation) => {\r\n            const hotel = hoteles.find((hotel) => hotel.id === reservation.hotel_id);\r\n            const fechaInicio = `${reservation.dia_inicio}/${reservation.mes_inicio}/${reservation.anio_inicio}`;\r\n            const fechaFin = `${reservation.dia_final}/${reservation.mes_final}/${reservation.anio_final}`;\r\n            return (\r\n              <div className=\"reservation-card\" key={reservation.ID}>\r\n                <p>Hotel: {hotel ? hotel.nombre : 'Hotel desconocido'}</p>\r\n                <p>Fecha de llegada: {fechaInicio}</p>\r\n                <p>Fecha de fin: {fechaFin}</p>\r\n                <p>Gracias por elegirnos!</p>\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <p>No tienes reservas</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;*/\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useCallback","AuthContext","jsxDEV","_jsxDEV","HomePage","_s","reservations","setReservations","reservasFiltradas","setReservasFiltradas","hoteles","setHoteles","isLoggedCliente","hotelFiltrado","setHotelFiltrado","startDateFilter","setStartDateFilter","endDateFilter","setEndDateFilter","getHoteles","hotelesArray","i","length","reserva","request","fetch","hotel_id","response","json","push","id","nombre","uniqueHotels","Array","from","Set","map","hotel","find","error","console","log","getReservations","accountId","localStorage","getItem","window","location","href","getReservasFiltradas","reservasArray","startDateObj","Date","endDateObj","getFullYear","getMonth","getDate","re","handleHotelFilterChange","event","target","value","handleStartDateFilterChange","selectedStartDateObj","alert","handleEndDateFilterChange","selectedEndDateObj","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onChange","reservation","fechaInicio","dia_inicio","mes_inicio","anio_inicio","fechaFin","dia_final","mes_final","anio_final","ID","_c","$RefreshReg$"],"sources":["C:/Users/tomig/OneDrive/Escritorio/Visual_Studio_Code/Arquitectura_De_Software_I/arqsoft/Proyecto/frontend/client/src/pages/reservas_cliente.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState, useCallback } from 'react';\r\nimport { AuthContext } from './login/auth';\r\nimport './estilo/reservas_cliente.css';\r\n\r\nconst HomePage = () => {\r\n  const [reservations, setReservations] = useState([]);\r\n  const [reservasFiltradas, setReservasFiltradas] = useState([]);\r\n  const [hoteles, setHoteles] = useState([]);\r\n  const { isLoggedCliente } = useContext(AuthContext);\r\n  const [hotelFiltrado, setHotelFiltrado] = useState('');\r\n  const [startDateFilter, setStartDateFilter] = useState('');\r\n  const [endDateFilter, setEndDateFilter] = useState('');\r\n\r\n  /*const getHoteles = useCallback(async () => {\r\n    try {\r\n      const hotelesArray = [];\r\n      for (let i = 0; i < reservations.length; i++) {\r\n        const reserva = reservations[i];\r\n        const request = await fetch(`http://localhost:8090/cliente/hotel/${reserva.hotel_id}`);\r\n        const response = await request.json();\r\n        hotelesArray.push(response);\r\n      }\r\n      setHoteles(hotelesArray);\r\n    } catch (error) {\r\n      console.log(\"No se pudieron obtener los hoteles:\", error);\r\n    }\r\n  }, [reservations]);*/\r\n\r\n  const getHoteles = useCallback(async () => {\r\n    try {\r\n      const hotelesArray = [];\r\n      for (let i = 0; i < reservations.length; i++) {\r\n        const reserva = reservations[i];\r\n        const request = await fetch(`http://localhost:8090/cliente/hotel/${reserva.hotel_id}`);\r\n        const response = await request.json();\r\n        hotelesArray.push({ id: response.id, nombre: response.nombre });\r\n      }\r\n      const uniqueHotels = Array.from(new Set(hotelesArray.map((hotel) => hotel.id))).map((id) => {\r\n        return hotelesArray.find((hotel) => hotel.id === id);\r\n      });\r\n      setHoteles(uniqueHotels);\r\n    } catch (error) {\r\n      console.log(\"No se pudieron obtener los hoteles:\", error);\r\n    }\r\n  }, [reservations]);\r\n\r\n  const getReservations = useCallback(async () => {\r\n    if (isLoggedCliente) {\r\n      const accountId = localStorage.getItem(\"id_cliente\");\r\n      try {\r\n        const request = await fetch(`http://localhost:8090/cliente/reservas/${accountId}`);\r\n        const response = await request.json();\r\n        setReservations(response);\r\n        setReservasFiltradas(response);\r\n      } catch (error) {\r\n        console.log(\"No se pudieron obtener las reservas:\", error);\r\n      }\r\n    } else {\r\n      window.location.href = '/';\r\n    }\r\n  }, [isLoggedCliente]);\r\n\r\n  const getReservasFiltradas = useCallback(async () => {\r\n    const reservasArray = [];\r\n    const hotelesArray = [];\r\n    const startDateObj = new Date(startDateFilter);\r\n    const endDateObj = new Date(endDateFilter);\r\n    try {\r\n      if (startDateFilter && endDateFilter) {\r\n        for (let i = 0; i < hoteles.length; i++) {\r\n          const request = await fetch(`http://localhost:8090/cliente/reservas-por-fecha/${startDateObj.getFullYear()}/${startDateObj.getMonth() + 1}/${startDateObj.getDate() + 1}/${endDateObj.getFullYear()}/${endDateObj.getMonth() + 1}/${endDateObj.getDate() + 1}`);\r\n          const response = await request.json();\r\n          hotelesArray.push(re);\r\n        }\r\n      }\r\n      else {\r\n        for (let i = 0; i < reservations.length; i++) {\r\n          const reserva = reservations[i];\r\n          hotelesArray.push(reserva);\r\n        }\r\n      }\r\n      for (let i = 0; i < hotelesArray.length; i++) {\r\n        const reserva = hotelesArray[i];\r\n        if (hotelFiltrado === '' || hotelFiltrado === 0 || reserva.hotel_id === hotelFiltrado) {\r\n          reservasArray.push(reserva);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(\"No se pudieron obtener las reservas:\", error);\r\n    }\r\n    setReservasFiltradas(reservasArray);\r\n  }, [hotelFiltrado, startDateFilter, endDateFilter, hoteles]);\r\n\r\n  useEffect(() => {\r\n    getReservations();\r\n  }, [getReservations]);\r\n\r\n  useEffect(() => {\r\n    getReservasFiltradas();\r\n  }, [getReservasFiltradas]);\r\n\r\n  useEffect(() => {\r\n    getHoteles();\r\n  }, [getHoteles]);\r\n\r\n  const handleHotelFilterChange = (event) => {\r\n    setHotelFiltrado(event.target.value);\r\n  };\r\n\r\n  const handleStartDateFilterChange = (event) => {\r\n    setStartDateFilter(event.target.value);\r\n    const selectedStartDateObj = new Date(event.target.value);\r\n    const endDateObj = new Date(endDateFilter);\r\n    if (selectedStartDateObj > endDateObj) {\r\n      setEndDateFilter('');\r\n      alert(\"Fechas no validas\");\r\n    }\r\n  };\r\n\r\n  const handleEndDateFilterChange = (event) => {\r\n    setEndDateFilter(event.target.value);\r\n    const startDateObj = new Date(startDateFilter);\r\n    const selectedEndDateObj = new Date(event.target.value);\r\n    if (startDateObj > selectedEndDateObj) {\r\n      setEndDateFilter('');\r\n      alert(\"Fechas no validas\");\r\n    }\r\n  };\r\n\r\n  /*const filteredReservations = reservations.filter((reservation) => {\r\n    const hotel = hoteles.find((hotel) => hotel.id === reservation.hotel_id);\r\n    const hotelName = hotel ? hotel.nombre : 'Hotel desconocido';\r\n    //const startDate = new Date(reservation.anio_inicio, reservation.mes_inicio - 1, reservation.dia_inicio);\r\n    //const endDate = new Date(reservation.anio_final, reservation.mes_final - 1, reservation.dia_final);\r\n\r\n    // Aplicar filtros\r\n    const hotelFilterMatch = hotelName === hotelFiltrado.selectedHotel;\r\n    //const startDateFilterMatch = startDateFilter === '' || startDate >= new Date(startDateFilter);\r\n    //const endDateFilterMatch = endDateFilter === '' || endDate <= new Date(endDateFilter);\r\n\r\n    //return hotelFilterMatch && startDateFilterMatch && endDateFilterMatch;\r\n    return hotelFilterMatch;\r\n  });*/\r\n\r\n  return (\r\n    <div className=\"reservations-container1\">\r\n      <div className=\"reservations-container2\">\r\n        <div className=\"filters-container\">\r\n          <div>\r\n            <label htmlFor=\"hotelFilter\">Hotel:</label>\r\n            <ul id=\"hotelFilter\">\r\n              <li value=\"0\" onClick={handleHotelFilterChange}>Todos los hoteles</li>\r\n              {hoteles.map((hotel) => (\r\n                <li key={hotel.id} value={hotel.id} onClick={handleHotelFilterChange}>\r\n                  {hotel.nombre}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"startDateFilter\">Fecha de inicio:</label>\r\n            <input type=\"date\" id=\"startDateFilter\" value={startDateFilter} onChange={handleStartDateFilterChange} />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"endDateFilter\">Fecha de fin:</label>\r\n            <input type=\"date\" id=\"endDateFilter\" value={endDateFilter} onChange={handleEndDateFilterChange} />\r\n          </div>\r\n        </div>\r\n        <h4>Datos de tus reservas:</h4>\r\n        {reservasFiltradas.length ? (\r\n          reservasFiltradas.map((reservation) => {\r\n            const hotel = hoteles.find((hotel) => hotel.id === reservation.hotel_id);\r\n            const fechaInicio = `${reservation.dia_inicio}/${reservation.mes_inicio}/${reservation.anio_inicio}`;\r\n            const fechaFin = `${reservation.dia_final}/${reservation.mes_final}/${reservation.anio_final}`;\r\n            return (\r\n              <div className=\"reservation-card\" key={reservation.ID}>\r\n                <p>Hotel: {hotel ? hotel.nombre : 'Hotel desconocido'}</p>\r\n                <p>Fecha de llegada: {fechaInicio}</p>\r\n                <p>Fecha de fin: {fechaFin}</p>\r\n                <p>Gracias por elegirnos!</p>\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <p>No tienes reservas</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default HomePage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*import React, { useContext, useEffect, useState, useCallback } from 'react';\r\nimport { AuthContext } from './login/auth';\r\nimport './estilo/reservas_cliente.css';\r\n\r\nconst HomePage = () => {\r\n  const [reservations, setReservations] = useState([]);\r\n  const [hotelesFiltrados, setHotelesFiltrados] = useState([]);\r\n  const [hoteles, setHoteles] = useState([]);\r\n  const { isLoggedCliente } = useContext(AuthContext);\r\n  const [hotelFiltrado, setHotelFiltrado] = useState('');\r\n  const [startDateFilter, setStartDateFilter] = useState('');\r\n  const [endDateFilter, setEndDateFilter] = useState('');\r\n\r\n  const getHoteles = useCallback(async () => {\r\n    try {\r\n      const hotelesArray = [];\r\n      for (let i = 0; i < reservations.length; i++) {\r\n        const reserva = reservations[i];\r\n        const request = await fetch(`http://localhost:8090/cliente/hotel/${reserva.hotel_id}`);\r\n        const response = await request.json();\r\n        hotelesArray.push(response);\r\n      }\r\n      setHoteles(Array.from(new Set(hotelesArray.map((hotel) => hotel.nombre))));\r\n    } catch (error) {\r\n      console.log(\"No se pudieron obtener los hoteles:\", error);\r\n    }\r\n  }, [reservations]);\r\n\r\n  const getHotelesFiltrados = useCallback(async () => {\r\n    try {\r\n      const hotelesArray = [];\r\n      for (let i = 0; i < reservations.length; i++) {\r\n        const reserva = reservations[i];\r\n        if (reserva.hotel_id === hotelFiltrado) {\r\n          const request = await fetch(`http://localhost:8090/cliente/hotel/${reserva.hotel_id}`);\r\n          const response = await request.json();\r\n          hotelesArray.push(response);\r\n        }\r\n      }\r\n      setHotelesFiltrados(hotelesArray);\r\n    } catch (error) {\r\n      console.log(\"No se pudieron obtener los hoteles:\", error);\r\n    }\r\n  }, [reservations, hotelFiltrado]);\r\n\r\n  const getReservations = useCallback(async () => {\r\n    if (isLoggedCliente) {\r\n      const accountId = localStorage.getItem(\"id_cliente\");\r\n      try {\r\n        const request = await fetch(`http://localhost:8090/cliente/reservas/${accountId}`);\r\n        const response = await request.json();\r\n        setReservations(response);\r\n      } catch (error) {\r\n        console.log(\"No se pudieron obtener las reservas:\", error);\r\n      }\r\n    } else {\r\n      window.location.href = '/';\r\n    }\r\n  }, [isLoggedCliente]);\r\n\r\n  useEffect(() => {\r\n    getReservations();\r\n  }, [getReservations]);\r\n\r\n  useEffect(() => {\r\n    if (reservations.length > 0) {\r\n      getHoteles();\r\n    }\r\n  }, [reservations, getHoteles]);\r\n  \r\n  useEffect(() => {\r\n    if (reservations.length > 0) {\r\n      getHotelesFiltrados();\r\n    }\r\n  }, [reservations, getHotelesFiltrados]);\r\n\r\n  const handleHotelFiltradoChange = (event) => {\r\n    setHotelFiltrado(event.target.value);\r\n  };\r\n\r\n  const handleStartDateFilterChange = (event) => {\r\n    setStartDateFilter(event.target.value);\r\n  };\r\n\r\n  const handleEndDateFilterChange = (event) => {\r\n    setEndDateFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"reservations-container1\">\r\n      <div className=\"reservations-container2\">\r\n        <div className=\"filters-container\">\r\n          <div>\r\n            <label htmlFor=\"hotelFilter\">Hotel:</label>\r\n            <ul id=\"hotelFilter\">\r\n              <li value=\"\" onClick={handleHotelFiltradoChange}>Todos los hoteles</li>\r\n              {hoteles.map((hotel) => (\r\n                <li key={hotel.id} value={hotel.id} onClick={handleHotelFiltradoChange}>\r\n                  {hotel.nombre}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"startDateFilter\">Fecha de inicio:</label>\r\n            <input type=\"date\" id=\"startDateFilter\" value={startDateFilter} onChange={handleStartDateFilterChange} />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"endDateFilter\">Fecha de fin:</label>\r\n            <input type=\"date\" id=\"endDateFilter\" value={endDateFilter} onChange={handleEndDateFilterChange} />\r\n          </div>\r\n        </div>\r\n        <h4>Datos de tus reservas:</h4>\r\n        {reservations.length ? (\r\n          reservations.map((reservation) => {\r\n            const hotel = hotelesFiltrados.find((hotel) => hotel.id === reservation.hotel_id);\r\n            const fechaInicio = `${reservation.dia_inicio}/${reservation.mes_inicio}/${reservation.anio_inicio}`;\r\n            const fechaFin = `${reservation.dia_final}/${reservation.mes_final}/${reservation.anio_final}`;\r\n            return (\r\n              <div className=\"reservation-card\" key={reservation.ID}>\r\n                <p>Hotel: {hotel ? hotel.nombre : 'Hotel desconocido'}</p>\r\n                <p>Fecha de llegada: {fechaInicio}</p>\r\n                <p>Fecha de fin: {fechaFin}</p>\r\n                <p>Gracias por elegirnos!</p>\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <p>No tienes reservas</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;*/\r\n\r\n\r\n\r\n\r\n\r\n/*import React, { useContext, useEffect, useState, useCallback } from 'react';\r\nimport { AuthContext } from './login/auth';\r\nimport './estilo/reservas_cliente.css';\r\n\r\nconst HomePage = () => {\r\n  const [reservations, setReservations] = useState([]);\r\n  const [hoteles, setHoteles] = useState([]);\r\n  const { isLoggedCliente } = useContext(AuthContext);\r\n\r\n  const getHoteles = useCallback(async () => {\r\n    try {\r\n      const hotelesArray = [];\r\n      for (let i = 0; i < reservations.length; i++) {\r\n        const reserva = reservations[i];\r\n        const request = await fetch(`http://localhost:8090/cliente/hotel/${reserva.hotel_id}`);\r\n        const response = await request.json();\r\n        hotelesArray.push(response);\r\n      }\r\n      setHoteles(hotelesArray);\r\n    } catch (error) {\r\n      console.log(\"No se pudieron obtener los hoteles:\", error);\r\n    }\r\n  }, [reservations]);\r\n\r\n  const getReservations = useCallback(async () => {\r\n    if (isLoggedCliente) {\r\n      const accountId = localStorage.getItem(\"id_cliente\");\r\n      try {\r\n        const request = await fetch(`http://localhost:8090/cliente/reservas/${accountId}`);\r\n        const response = await request.json();\r\n        setReservations(response);\r\n      } catch (error) {\r\n        console.log(\"No se pudieron obtener las reservas:\", error);\r\n      }\r\n    } else {\r\n      window.location.href = '/';\r\n    }\r\n  }, [isLoggedCliente]);\r\n\r\n  useEffect(() => {\r\n    getReservations();\r\n  }, [getReservations]);\r\n\r\n  useEffect(() => {\r\n    getHoteles();\r\n  }, [getHoteles]); // Se agrega getHoteles como dependencia separada\r\n\r\n  return (\r\n    <div className=\"reservations-container1\">\r\n      <div className=\"reservations-container2\">\r\n        <h4>Datos de tus reservas:</h4>\r\n        {reservations.length ? (\r\n          reservations.map((reservation) => {\r\n            const hotel = hoteles.find((hotel) => hotel.id === reservation.hotel_id);\r\n            const fechaInicio = `${reservation.dia_inicio}/${reservation.mes_inicio}/${reservation.anio_inicio}`;\r\n            const fechaFin = `${reservation.dia_final}/${reservation.mes_final}/${reservation.anio_final}`;\r\n            return (\r\n              <div className=\"reservation-card\" key={reservation.ID}>\r\n                <p>Hotel: {hotel ? hotel.nombre : 'Hotel desconocido'}</p>\r\n                <p>Fecha de llegada: {fechaInicio}</p>\r\n                <p>Fecha de fin: {fechaFin}</p>\r\n                <p>Gracias por elegirnos!</p>\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <p>No tienes reservas</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;*/"],"mappings":"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ACG;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAACpE,EAAA,CAzLID,QAAQ;AAAAmF,EAAA,GAARnF,QAAQ;AA0Ld,eAAeA,QAAQ;;AAWvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzEA,IAAAmF,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}