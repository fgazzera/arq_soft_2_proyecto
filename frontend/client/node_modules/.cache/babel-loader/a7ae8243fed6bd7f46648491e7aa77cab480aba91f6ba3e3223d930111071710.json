{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomig\\\\OneDrive\\\\Escritorio\\\\Visual_Studio_Code\\\\Arquitectura_De_Software_I\\\\arqsoft\\\\Proyecto\\\\frontend\\\\client\\\\src\\\\pages\\\\reservas_cliente.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { AuthContext } from './login/auth';\n//import { Link } from 'react-router-dom';\nimport './estilo/inicio.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  //const [hotels, setHotels] = useState([]);\n  const [reservations, setReservations] = useState([]);\n  const {\n    isLoggedAdmin\n  } = useContext(AuthContext);\n  const {\n    isLoggedCliente\n  } = useContext(AuthContext);\n  useEffect(() => {\n    const getUser = () => {\n      if (isLoggedCliente) {\n        const accountId = localStorage.getItem(\"id_cliente\");\n        fetch(`http://localhost:8090/cliente/${accountId}`).then(response => response.json()).then(data => {\n          setAccountDetails({\n            nombre: data.name,\n            apellido: data.last_name,\n            username: data.username,\n            password: data.password,\n            email: data.email\n          });\n        }).catch(error => {\n          console.error('Error al obtener los datos del cliente:', error);\n        });\n      } else if (isLoggedAdmin) {\n        const accountId = localStorage.getItem(\"id_admin\");\n        fetch(`http://localhost:8090/cliente/email/${accountId}`).then(response => response.json()).then(data => {}).catch(error => {\n          console.error('Error al obtener los datos del cliente:', error);\n        });\n      } else {\n        window.location.href = '/login-cliente';\n      }\n    };\n    getUser();\n  }, [isLoggedAdmin, isLoggedCliente]);\n  const getReservations = async () => {\n    try {\n      const request = await fetch(`http://localhost:8090/cliente/reservas/${user.id}`); // Realizar una solicitud al backend pasando el ID del cliente autenticado\n      const response = await request.json();\n      setReservations(response);\n    } catch (error) {\n      console.log(\"No se pudieron obtener las reservas:\", error);\n    }\n  };\n  useEffect(() => {\n    getReservations();\n  }, []);\n  const Verificacion = hotelId => {\n    if (!isLogged) {\n      window.location.href = '/login-cliente';\n    } else {\n      window.location.href = `/reservar/${hotelId}`;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reservations-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tus reservas:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }, this), reservations.length ? reservations.map(reservation => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reservation-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Hotel: \", reservation.hotel]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Fecha de inicio: \", reservation.fechaInicio]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Fecha de fin: \", reservation.fechaFin]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, reservation.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tienes reservas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(HomePage, \"YXfcIkPY6LGAPSnJfcv/3lUU+OI=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useContext","useEffect","useState","AuthContext","jsxDEV","_jsxDEV","HomePage","_s","reservations","setReservations","isLoggedAdmin","isLoggedCliente","getUser","accountId","localStorage","getItem","fetch","then","response","json","data","setAccountDetails","nombre","name","apellido","last_name","username","password","email","catch","error","console","window","location","href","getReservations","request","user","id","log","Verificacion","hotelId","isLogged","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","reservation","hotel","fechaInicio","fechaFin","_c","$RefreshReg$"],"sources":["C:/Users/tomig/OneDrive/Escritorio/Visual_Studio_Code/Arquitectura_De_Software_I/arqsoft/Proyecto/frontend/client/src/pages/reservas_cliente.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { AuthContext } from './login/auth';\r\n//import { Link } from 'react-router-dom';\r\nimport './estilo/inicio.css';\r\n\r\nconst HomePage = () => {\r\n  //const [hotels, setHotels] = useState([]);\r\n  const [reservations, setReservations] = useState([]);\r\n  const { isLoggedAdmin } = useContext(AuthContext);\r\n  const { isLoggedCliente } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    const getUser = () => {\r\n      if (isLoggedCliente) {\r\n        const accountId = localStorage.getItem(\"id_cliente\");\r\n        fetch(`http://localhost:8090/cliente/${accountId}`)\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            setAccountDetails({\r\n              nombre: data.name,\r\n              apellido: data.last_name,\r\n              username: data.username,\r\n              password: data.password,\r\n              email: data.email\r\n            });\r\n          })\r\n          .catch(error => {\r\n            console.error('Error al obtener los datos del cliente:', error);\r\n          });\r\n      }\r\n      else if (isLoggedAdmin) {\r\n        const accountId = localStorage.getItem(\"id_admin\");\r\n        fetch(`http://localhost:8090/cliente/email/${accountId}`)\r\n          .then(response => response.json())\r\n          .then(data => {\r\n          \r\n          })\r\n          .catch(error => {\r\n            console.error('Error al obtener los datos del cliente:', error);\r\n          });\r\n      }\r\n      else {\r\n        window.location.href = '/login-cliente';\r\n      }\r\n    };\r\n\r\n    getUser();\r\n  }, [isLoggedAdmin, isLoggedCliente]);\r\n\r\n  const getReservations = async () => {\r\n    try {\r\n      const request = await fetch(`http://localhost:8090/cliente/reservas/${user.id}`); // Realizar una solicitud al backend pasando el ID del cliente autenticado\r\n      const response = await request.json();\r\n      setReservations(response);\r\n    } catch (error) {\r\n      console.log(\"No se pudieron obtener las reservas:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getReservations();\r\n  }, []);\r\n\r\n  const Verificacion = (hotelId) => {\r\n    if (!isLogged) {\r\n      window.location.href = '/login-cliente';\r\n    } else {\r\n      window.location.href = `/reservar/${hotelId}`;\r\n    }\r\n  };\r\n\r\n  return (\r\n   \r\n        <div className=\"reservations-container\">\r\n          <h2>Tus reservas:</h2>\r\n          {reservations.length ? (\r\n            reservations.map((reservation) => (\r\n              <div className=\"reservation-card\" key={reservation.id}>\r\n                <p>Hotel: {reservation.hotel}</p>\r\n                <p>Fecha de inicio: {reservation.fechaInicio}</p>\r\n                <p>Fecha de fin: {reservation.fechaFin}</p>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>No tienes reservas</p>\r\n          )}\r\n        </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}