{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomig\\\\OneDrive\\\\Escritorio\\\\Visual_Studio_Code\\\\Arquitectura_De_Software_I\\\\arqsoft\\\\Proyecto\\\\frontend\\\\client\\\\src\\\\pages\\\\login\\\\auth.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [isLoggedCliente, setIsLoggedCliente] = useState(localStorage.getItem('auth') === 'true');\n  const [isLoggedAdmin, setIsLoggedAdmin] = useState(localStorage.getItem('auth') === 'true');\n  const loginAdmin = (newToken, id) => {\n    setIsLoggedAdmin(true);\n    localStorage.setItem('token', newToken);\n    localStorage.setItem('id_admin', id);\n    localStorage.setItem('auth', true);\n  };\n  const loginCliente = (newToken, id) => {\n    setIsLoggedCliente(true);\n    localStorage.setItem('token', newToken);\n    localStorage.setItem('id_cliente', id);\n    localStorage.setItem('auth', true);\n  };\n  const logout = useCallback(async () => {\n    setIsLoggedCliente(false);\n    setIsLoggedAdmin(false);\n    localStorage.removeItem('token');\n    localStorage.removeItem('id_admin');\n    localStorage.removeItem('id_cliente');\n    localStorage.setItem('auth', false);\n  }, []);\n  const comprobarLogin = useEffect(async () => {\n    //setIsLoggedCliente(true)\n    if (isLoggedCliente) {\n      const accountId = localStorage.getItem(\"id_cliente\");\n      try {\n        const request = await fetch(`http://localhost:8090/cliente/${accountId}`);\n        const response = await request.json();\n        if (!response) {\n          logout();\n        }\n      } catch (error) {\n        console.log(\"No se pudieron obtener los datos del cliente:\", error);\n      }\n      //logout();\n    }\n\n    if (isLoggedAdmin) {\n      const accountId = localStorage.getItem(\"id_admin\");\n      try {\n        const request = await fetch(`http://localhost:8090/admin/${accountId}`);\n        const response = await request.json();\n        if (!response) {\n          logout();\n        }\n      } catch (error) {\n        console.log(\"No se pudieron obtener los datos del cliente:\", error);\n      }\n    }\n  }, [logout, isLoggedAdmin, isLoggedCliente]);\n  const propiedades = {\n    isLoggedCliente,\n    isLoggedAdmin,\n    loginCliente,\n    loginAdmin,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: propiedades,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"yEQFAbcDbAs44DlhFF/rBGYWzb4=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useCallback","jsxDEV","_jsxDEV","AuthContext","AuthProvider","_ref","_s","children","isLoggedCliente","setIsLoggedCliente","localStorage","getItem","isLoggedAdmin","setIsLoggedAdmin","loginAdmin","newToken","id","setItem","loginCliente","logout","removeItem","comprobarLogin","accountId","request","fetch","response","json","error","console","log","propiedades","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/tomig/OneDrive/Escritorio/Visual_Studio_Code/Arquitectura_De_Software_I/arqsoft/Proyecto/frontend/client/src/pages/login/auth.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect, useCallback } from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isLoggedCliente, setIsLoggedCliente] = useState(localStorage.getItem('auth') === 'true');\r\n  const [isLoggedAdmin, setIsLoggedAdmin] = useState(localStorage.getItem('auth') === 'true');\r\n\r\n  const loginAdmin = (newToken, id) => {\r\n    setIsLoggedAdmin(true);\r\n    localStorage.setItem('token', newToken);\r\n    localStorage.setItem('id_admin', id);\r\n    localStorage.setItem('auth', true);\r\n  };\r\n\r\n  const loginCliente = (newToken, id) => {\r\n    setIsLoggedCliente(true);\r\n    localStorage.setItem('token', newToken);\r\n    localStorage.setItem('id_cliente', id);\r\n    localStorage.setItem('auth', true);\r\n  };\r\n\r\n  const logout = useCallback(async () => {\r\n    setIsLoggedCliente(false);\r\n    setIsLoggedAdmin(false);\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('id_admin');\r\n    localStorage.removeItem('id_cliente');\r\n    localStorage.setItem('auth', false);\r\n  }, []);\r\n\r\n  const comprobarLogin = \r\n\r\n  useEffect(async () => {\r\n    //setIsLoggedCliente(true)\r\n    if (isLoggedCliente) {\r\n      const accountId = localStorage.getItem(\"id_cliente\");\r\n      try {\r\n        const request = await fetch(`http://localhost:8090/cliente/${accountId}`);\r\n        const response = await request.json();\r\n        if (!response) {\r\n          logout();\r\n        }\r\n      } catch (error) {\r\n        console.log(\"No se pudieron obtener los datos del cliente:\", error);\r\n      }\r\n      //logout();\r\n    }\r\n    \r\n    if (isLoggedAdmin) {\r\n      const accountId = localStorage.getItem(\"id_admin\");\r\n      try {\r\n        const request = await fetch(`http://localhost:8090/admin/${accountId}`);\r\n        const response = await request.json();\r\n        if (!response) {\r\n          logout();\r\n        }\r\n      } catch (error) {\r\n        console.log(\"No se pudieron obtener los datos del cliente:\", error);\r\n      }\r\n    }\r\n  }, [logout, isLoggedAdmin, isLoggedCliente]);\r\n\r\n  const propiedades = {\r\n    isLoggedCliente,\r\n    isLoggedAdmin,\r\n    loginCliente,\r\n    loginAdmin,\r\n    logout,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={propiedades}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}